<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC 
  "-//OASIS//DTD DocBook XML V4.5//EN" 
  "http://www.docbook.org/xml/4.5/docbookx.dtd"
[
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 id="gsoc" role="gsoc">
  <title>Google Summer of Code</title>
  <mediaobject>
    <imageobject>
      <imagedata fileref="http://michal.hrusecky.net/wp-content/uploads/GSoC2011_300x200.png"
        width="20%" align="center"/>
    </imageobject>
  </mediaobject>
  <blockquote>
    <title><ulink url="http://sysbytes.wordpress.com/2011/06/12/sax3-gsoc-2011-weekly-report-2/"
        >Manu Gupta: SaX3 – GSoC 2011 – Weekly Report 2</ulink></title>
    <para>This is my 2nd report, this week not to show much for the users, but we did a quite
      interesteing things. SaX is now module oriented.So, if anyone wants to write a module for SaX3
      it is possible now. Besides the important things which I did was.<orderedlist>
        <listitem>
          <para>Learn the augeas C api</para>
        </listitem>
        <listitem>
          <para>Submitted a  .desktop lens for augeas</para>
        </listitem>
        <listitem>
          <para>It is module oriented</para>
        </listitem>
        <listitem>
          <para>Tried out Doxygen</para>
        </listitem>
        <listitem>
          <para>SaX3 is now localised.</para>
        </listitem>
      </orderedlist></para>
    <para>The launcher is now complete <mediaobject>
        <imageobject>
          <imagedata
            fileref="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif?m=1304368896g"/>
        </imageobject>
      </mediaobject> Again, the source code is here<ulink url="http://github.com/manugupt1/sax3"
        >http://github.com./manugupt1/sax3</ulink> Regarding modules, If anyone wants to check out
      how modules work, they work using .desktop files  in /usr/share/sax3/modules.d. If you will
      remove it we can remove it from the launcher.</para>
    <!-- ($ ld: 14.6.11 sm $) -->
  </blockquote>
  <blockquote>
    <title>
      <ulink url="http://rxvl.in/post/6481353758/gsoc-2011-ssc-week-3">Ratan Sebastian: GSOC 2011:
        ssc - Week 3</ulink></title>
    <para>This week I was working on the local storage feature of the client. As proposed we were
      going to add and remove packages, repositories and files with a git-like workflow.
      i.e. <screen>ssc package add gnuchess</screen>would make a local record of the intention to
      add that package and on <screen>ssc commit</screen>the changes would actually be
      pushed.</para>
    <para>In order to facilitate this I’m abstracting all the directory management to a
      DirectoryManager module. Which abstracts methods to save, read and diff from local sources.
      Right now the syntax I’ve chosen is YAML. For instance the software file in the appliance
      directory - which catalogues the changes made to the appliance’s software - stores names of
      installed packages. Unless the ssc command is invoked with the -r | --remoteoption, it will
      display the packages in that file. In addition when ssc package add gnuchess is run with out
      the -r option, it will make and addition add gnuchess to the software file. Similarly for
      remove. I am having some problems figuring out how to integrate patterns into this
      architecture so any help on that front would be appreciated.</para>
    <para>That’s it for this week. I’m going to be working on pretty much the same thing next week.
      Extending and refactoring this functionality. So hopefully we will have a more usable version
      then.Thank you for reading.</para>
    <!-- ($ ld: 14.6.11 sm $)-->
  </blockquote>
  <blockquote>
    <title><ulink
        url="http://fridrich.blogspot.com/2011/06/libreoffice-visio-import-filter-shaping.html"
        >Fridrich Strba: LibreOffice Visio import filter - shaping up the baby</ulink></title>
    <para>Maybe you were asking yourself what happened in the Google Summer of Code Visio Import
      filter project since <ulink
        url="http://fridrich.blogspot.com/2011/06/libreoffice-visio-import-filter-first.html">last
        week</ulink>. But even if you did not ask yourself this necessary question, here is some
      update about the baby:</para>
    <para>The focus this week was mainly on shaping the baby up. <ulink
        url="http://www.derivativezero.com/blog/">Eilidh</ulink> added to her blog a photo and an
      "About" line and then she got exhausted and decided to rest by coding. And it is like this
      that she implemented polylines, ellipses and circular arcs.</para>
    <para>And since the images speak louder then any words, enjoy the look: (...)</para>
    <!--($ ld: 18.6.11 sm $)-->
  </blockquote>
  <blockquote>
    <title><ulink
        url="http://cbounta.wordpress.com/2011/06/17/a-utility-for-merging-configuration-sysconfig-files-week-4-report/"
        >Christos Bountalis: A utility for merging configuration / sysconfig files – Week 4
        Report</ulink></title>
    <para>This is the 4rth week report, a lot of coding this week, you can see some code on my
      project github under branch working. Yes the code there is still not stable, but I am
      improving it constantly. Till this moment, i didn’t have any feedback except from my mentor,
      so if you check it out and have some suggestion or something, please feel free to contact me. </para>
    <para><emphasis role="bold">What is new in few words?</emphasis></para>
    <para>There have been improvements in many of the functions i did, several new functions have
      been added in my augeas branch repo, i try to split things up as much as possible, to help me
      debug things. </para>
    <para>Functions Changed/Added:</para>
    <para>
      <itemizedlist>
        <listitem>
          <para> aug_find_lense</para>
        </listitem>
        <listitem>
          <para> aug_load_file</para>
        </listitem>
        <listitem>
          <para> tree_child_sort_label</para>
        </listitem>
        <listitem>
          <para> aug_process_tree</para>
        </listitem>
        <listitem>
          <para> int label_compare</para>
        </listitem>
        <listitem>
          <para>merge command in augtool was changed a bit too.</para>
        </listitem>
      </itemizedlist>
    </para>
    <para><emphasis role="bold">What is next?</emphasis></para>
    <para>The basic steps for tree matching have already been implemented, the goal now is to finish
      it and actually include the merging functions too. The tree matching is the most complex part
      as far i have understood in this project. By completing it, the other steps in the initial
      schedule will be implemented easier.</para>
    <!--($ ld: 18.6.11 sm $)-->
  </blockquote>
  <blockquote>
    <title><ulink url="http://obsforandroid.wordpress.com/2011/06/17/6-17-2011-weekly-report/"
        >Justine Leng: 6.17.2011 Weekly Report</ulink></title>
    <para>This week, I primarily focused on accumulating community feedback on my <ulink
        url="http://obsforandroid.wordpress.com/2011/06/09/obs-mobile-request-page-makeover/"
        >request page makeover suggestions</ulink>, and refining the features accordingly.</para>
    <para>So based on the limited but helpful user feedback I received, I’ve made the following
      changes: (...)</para>
    <!--($ ld: 18.6.11 sm $)-->
  </blockquote>
</sect1>
