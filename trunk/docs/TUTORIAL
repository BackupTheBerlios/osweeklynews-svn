#################################################################################
##                                                                             ##
## TUTORIAL File for the                                                       ##
##                      openSUSE Weekly News Project                           ##
##                                                                             ##
## Sascha Manns <saigkill@opensuse.org>                                        ##
## Thomas Schraitle <toms@suse.de>                                             ##
##                                                                             ##
## Last edit: $Date: 2010-11-24 17:20:52 +0100 (Mi, 24. Nov 2010) $            ##
##                                                                             ##
#################################################################################

1.) What are this project?
==========================
This is a project who supports the code for the openSUSE Weely News.
We are working with XML (DocBook) Files, and using FOP for formatting and
exporting into different output formats.
The great advantage of this method is: write once, publish it in lots of formats!
For example, you can get HTML, PDF and others output formats.

2.) Which are the prequisites for me as writer?
===============================================
It's recommended to have some basic XML knowledge. If not, its not a tragedy. 
XML Editors simplifies the writing process a lot. But keep in mind: 
What you see in your editor is not really what you get. Usually you do not
have to care about the layout. Writing in XML is almost similar to writing in
(X)HTML: you write tags with a special meaning. The only "obstacle" between
DocBook and (X)HTML is that tag names are different. 
We have a special formatting process, that uses our own stylesheets.

3.) What needs my PC for working in this project?
=================================================
We now list a short list for important sources.

External:
* Serna free (http://www.syntext.com/downloads/serna-free/)
* XML Mind (http://www.xmlmind.com/xmleditor/)

Internal (from OBS):
* susedoc
* susedoc-buildbook
* docbook
* fop

Normally, if you choose the above packages, the package manager will add new packages
to the list. Thats ok. All of these packages are needed.


4.) What are the projects workaround?
====================================
If you have your BerliOS account (as written in README), you can go to the site:
http://developer.berlios.de/svn/?group_id=12095 and checkout the source via
the described "Developer SVN Access". 
The structure of the repository is written in the README. 

In the following lines write from a view of a editor in "trunk/en".
All files to edit are placed in "trunk/en/xml". The whole Weekly News are
splitted into sections. So the Section "Status Updates" are in the File
"own-status-updates.xml". 

In the case that you are need to edit this File, you can open it with one
of the proposed XML Editors. Both, Serna free and XML Mind have plusses and
minusses. If you want to create one or more paragraphs, or you want to move
Paragraphs, then Serna is a good choice. If you want just to write things,
i propose XML Mind. But you have to test both and make experiences, than
you know, what you like. 

There you see the Documentstructure. In "Build Service Team" you see,
that the Article is marked as "blockquote".

The ulink Contains in the first Line the URL. Under that Line we can write
the Summary of the Link. Under blockquote we can see "para". That stands
for Paragraph. There you can place the paragraphs.

If you like to create a list (maybe if you are the Eventeditor), you 
can go to the begin of the document. There i've created a Part
called "itemizedlist". Under that i created a title "Important Links".
Then the FO Processor knows, that he should create a list.
Every point in the List is called as "listitem". Under listitem you
can create ulinks for URL.

So our Eventeditor just must use Itemizedlist and listitem. Other
Fields of the Newsletter needs blockquote and para.

If we have finished editing of one of the own-* Files, we have to 
checkin our stuff to the SVN. So others can use your copy. For checkin use:

$ svn ci

Then svn gives you a Overview about the changes. Now you have to review it and
if its okay, drop a short note about the changes, and close the editor.
Then BerliOS asks for the Password. After passing this, the changes go up
to the SVN.

Please keep in mind, that you have to make a

$ svn up

so often, as possible. Then we have'nt korruptions.

If all Sections are ready, then starts the proofreaders work. The proofreader
can open the file "trunk/en/xml/OWN.xml". If the XML Editor reads this in, all 
subfiles who starts with "own-*" are readed in and included into it. So
the proofreader can see all Documents in one view.

The Editor in chief makes the finishing. We don't delete any sections or paragraphs.
If a paragraph in a section is not needed, we comment it out via:

<!-- View out -->

Maybe we have a whole section who is unneeded, we open OWN.xml just in a editor like vim.
Now i write about the cause, that we don't need own-statusupdates.xml. Then we search
in the OWN.xml the line: 

:include href="own-status-updates.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

and we comment it out like:

<!--
<xi:include href="own-status-updates.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
-->

Then the Processor outcluded it.

Every Issue we must change ~/xml/entities.ent. That File contains:
<!ENTITY own "openSUSE Weekly News">
<!ENTITY edition "146">

There the Editor in Chief set up the Issuenumber up. These entries are used in the whole Document and 
must just set one per Issue.

If the Issue is ready we set a Tag under ~/tags/own146. Then we don't clean the trunk. We working inside
the trunk. Then we overwrite the old content. But we have the Situation that we have new content on the
top and old content on the foot. So we must clarify what we have done. So we use this Workaround:
1.) Overwrite old content. 
2.) Place on the End of your Change that string (EDITMARK).
Then the next can delete your (EDITMARK) can overwrite the next paragraph and he can set the 
(EDITMARK) for the next.
In the old days, who we worked in the Wiki, i placed every new issue a blank template in the Workplace.
Now we don' use templates. We are working every time inside the trunk.

Now follows the next Document "BUILD".

5.) Where i can get more informations?
======================================

* http://en.wikipedia.org/wiki/Apache_Subversion (About SVN)
* http://en.wikipedia.org/wiki/XML (About XML)
* http://en.wikipedia.org/wiki/DocBook (About DocBook)
* http://www.docbook.org/ (About DocBook Homepage)
* http://en.wikipedia.org/wiki/XSL-FO (About XSL Markup Language)
