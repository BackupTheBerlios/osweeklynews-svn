<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://psankar.blogspot.com/2011/01/showhide-files-and-icons-in-gnome.html"
          >Sankar P: Show/Hide Files and Icons in GNOME Desktop</ulink>
      </title>
      <para>I wrote about webilder earlier which will give you stunning random wallpapers for your
        linux desktop from flickr. I have a habit of allowing the number of files, screenshots and
        documents in my desktop to go on a large number. Once they reach a critical number, I get
        around to cleaning the files. But because I have so many files, the beautiful wallpapers are
        sometimes not shown clearly. I felt there should be a way to toggle showing the files in
        Desktop and it turned out there is a way.<itemizedlist>
          <listitem>
            <para>Step 1: Launch <emphasis role="bold">gnome-keybinding-properties</emphasis></para>
          </listitem>
          <listitem>
            <para>Step 2: Click on the <quote>Add</quote> button in the bottom and in the resulting
              dialog, type <quote>Hide Desktop Icons</quote> for the Name field and for the command
              field,
              type:<screen>gconftool-2 -s --type boolean /apps/nautilus/preferences/show_desktop false</screen></para>
          </listitem>
          <listitem>
            <para>Step 3: Create another keybinding by clicking the <quote>Add</quote> button and
              this time create a <quote>Show Desktop Icons</quote> item. The command for this will
              be:<screen>gconftool-2 -s --type boolean /apps/nautilus/preferences/show_desktop true</screen></para>
          </listitem>
          <listitem>
            <para>Step 4: Set custom keyboard shortcuts for these two commands. I have used Alt+F11
              and Alt+F12 in my case. </para>
          </listitem>
        </itemizedlist><note>
          <para><emphasis role="bold">Update</emphasis>: You can just use the following command and
            have only one keyboard shortcut as well. Thanks to the anonymous commenter who provided
            the tip (please guys, leave your name when commenting :)) gconftool-2 --toggle
            /apps/nautilus/preferences/show_desktop</para>
        </note></para>
      <mediaobject>
        <imageobject>
          <imagedata
            fileref="http://1.bp.blogspot.com/_G_VBnbGWMzs/TTQn-cCFQ6I/AAAAAAAAEWU/Hg2O9bIkzkA/s1600/show-hide.png"
            width="50%"/>
        </imageobject>
      </mediaobject>
      <para>Now you can toggle (show/hide) your desktop icons at a keystroke and enjoy your clean
        wallpapers.</para>
      <!-- ($ ld: 18.1.11 sm $) -->
    </blockquote>
    <blockquote>
      <title><ulink
          url="http://psankar.blogspot.com/2011/01/download-all-youtube-videos-of-user.html">Sankar
          P: Download all youtube videos of a user</ulink></title>
      <para>Recently I got addicted to watching Nigella Lawson Cooking videos on youtube. As much as
        I like youtube, I prefer to watch videos offline as well. One user has uploaded a lot of
        those videos and I wanted to download all the videos by that user. </para>
      <para>I tried a few firefox plugins, youtube-dl python script, etc. for doing this but none
        seemed to be fit for the job. Good old Shell-script came for rescue. I saved the user's
        youtube homepage in .html, grepped through the file for links, ran uniq and then fed them
        all to youtube-dl and bulk-downloaded all the videos. If you want parallel downloads, you
        can easily do that also by tweaking the script.</para>
      <para>The commands
        are:<screen>grep -E 'http://www.youtube.com/watch\?v=[[:alnum:]-]{11}' dump.html -o | uniq > vdos
for i in `cat vdos`; do youtube-dl -t $i; done; rm vdos;</screen></para>
      <para>HTH someone. </para>
      <para>If you know of a better solution (some firefox/chrome addon, Greasmonkey, etc.) which
        will work in Linux, please let me know.</para>
      <!-- ($ ld: 15.1.11 sm $) -->
    </blockquote>
  </sect2>
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://bashshell.net/bash-shell/using-pipes-in-the-bash-shell/">BashShell.net:
          Using Pipes in the Bash Shell</ulink>
      </title>
      <para>The usage of pipes with the shell is easy and powerful. This lab will help you
        understand the use of pipes. (...)</para>
      <!-- ($ ld: 15.1.11 sat $) -->
    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="http://www.cyberciti.biz/tips/linux-shared-library-management.html"
          >nixCraft/Vivek Gite: Linux Commands For Shared Library Management &amp; Debugging
          Problem</ulink>
      </title>
      <para>If you are a developer, you will re-use code provided by others. Usually /lib, /lib64,
        /usr/local/lib, and other directories stores various shared libraries. You can write your
        own program using these shared libraries. As a sys admin you need to manage and install
        these shared libraries. Use the following commands for shared libraries management,
        security, and debugging problems. (...)</para>
      <!-- ($ ld: 15.1.11 sat $) -->
    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://www.phocean.net/2011/01/16/corrupted-virtual-disk-with-vmware.html"
          >Jean-Christophe Baptiste: Corrupted virtual disk with VMware </ulink>
      </title>
      <para>Wow, this article and especially one of its comments saved my day. </para>
      <para>My computer crashed and one of the VMware machine hosted on it could not start anymore
        :<screen>“Cannot open the disk ‘path of vmdk’ or one of the snapshot disks it depends on.
Reason: the specific virtual disk needs repair.</screen></para>
      <para>Checking on the VMware forums, I quickly found the command that was supposed to help
        :<screen>$ vmware-vdiskmanager -R /path/to/disk.vmdk
The virtual disk, '/path/to/disk.vmdk', is corrupted but the repair process has failed.</screen></para>
      <para>Damned ! I almost resigned restoring the last backup and loosing a week of work when, by
        chance, I found the article mentioned above. </para>
      <para>As recommended, I downloaded the Virtual Disk Development Kit 1.2 from VMware, untared
        it and still doubtfully launched
        :<screen>$ ./bin64/vmware-vdiskmanager -R /path/to/disk.vmdk
The virtual disk, '/path/to/disk.vmdk', was corrupted and has been  successfully repaired.</screen></para>
      <para>Saved! Thanks so much to the guys. I would have never thought about trying it, I wonder
        how they could find it. </para>
      <para>But how is it possible that the utility coming with vmware workstation 7.1 such so much
        and is not on par with other versions ? (...)</para>
      <!-- ($ ld: 18.1.11 sm $) -->
    </blockquote>
    <blockquote>
      <title>
        <ulink
          url="http://seife.kernalert.de/blog/2011/01/17/increasing-the-x-resolution-for-kvm-guests/"
          >Stefan Seyfried: Increasing the X resolution for KVM guests</ulink>
      </title>
      <para>Today I wondered again, why my KVM guests get only 800×600 display resolution, even
        though the framebuffer console is configured for 1024×768. While most of the time this does
        not matter for testing, it does once you want to evalutate desktop environments or such in a
        VM. </para>
      <para>I checked the xorg log file and found, that the Cirrus card emulation apparently has no
        DDC channel implemented, thus cannot detect the monitor and then X.org falls back to a plain
        SVGA monitor. From the
        logfile:<screen>Using default hsync range of 31.50-37.90 kHz
Using default vrefresh range of 50.00-70.00 Hz</screen></para>
      <para>Simply setting those ranges to something reasonable (I got my values from “<emphasis
          role="bold">hwinfo --monitor</emphasis>“) helps quite a lot. Put this into
        /etc/X11/xorg.conf.d/50-monitor.conf:<screen>  HorizSync   31 - 61
  VertRefresh 50 - 90</screen></para>
      <para>and you get a much more usable 1024×768 resolution.</para>
      <!-- ($ ld: 18.1.11 sm $) -->
    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://emmes.livejournal.com/8382.html">Matthias Hopf: Restricting Linux kernel
          configure options to currently used set</ulink>
      </title>
      <para>git is great for bisecting regressions (or finding a fix in a series of commits) - but
        compiling the kernel can take ages, especially if you have to do it on an Atom, and with the
        configuration of your favorite distribution... </para>
      <para>Now finally I created a perl script for reducing the default config to the set of
        modules that are currently actually loaded. Reduces kernel compilation times on a quad core
        machine from 56 minutes to 6 for a standard SLED kernel Guess it's even more difference on
        this !@#$%
        Atom...<programlisting>  # cd /var/tmp/linux-2.6                    or wherever your git tree is located
  # gunzip &lt;/proc/config.gz >.config         to get the current configuration
  # make oldconfig                           to add new options for current kernel
  # ~/linux-adaptconfig.pl >.config.new      to remove all not required options
  # mv .config.new .config
  # make oldconfig                           to be on the save side...
  # make -j5                                 build, mother*beep*, build :-)
</programlisting></para>
      <para>Yes, it's a hack. No, it's certainly not perfect. But it might be exactly what you had
        been waiting for. I waited long enough to actually write it myself...</para>
      <!-- ($ ld: 18.1.11 sm $) -->
    </blockquote>
    <blockquote>
      <title>
        <ulink
          url="http://www.howtoforge.com/installing-cherokee-with-php5-and-mysql-support-on-opensuse-11.3"
          >Linuxaria: 6 Tricks with awk</ulink>
      </title>
      <para>Awk has always been for me a source of great hatred and love, isan incredibly powerful
        command with which it is possible to build real programs. </para>
      <para>In this article I will give you 6 examples ready for use with your preferred terminal. </para>
      <para>AWK is a data driven programming language designed for processing text-based data,
        either in files or data streams. It is an example of a programming language that extensively
        uses the string datatype, associative arrays (that is, arrays indexed by key strings), and
        regular expressions. (...)</para>
      <!-- ($ ld: 18.1.11 sm $) -->
    </blockquote>
    <blockquote>
      <title><ulink url="http://www.unixmen.com/linux-commands/1459-useful-commands-for-daily-use"
          >Unixmen/Zinovsky: Useful commands for daily use</ulink></title>
      <para><quote>Under Linux there are graphical user interfaces (GUIs), where you can point and
          click and drag, and hopefully get work done terminalwithout first reading lots of
          documentation. The traditional Unix environment is a CLI (command line interface), where
          you type commands to tell the computer what to do. That is faster and more powerful, but
          requires finding out what the commands are.</quote> -<emphasis role="italic">man
          intro</emphasis>-</para>
      <para>Find in this post a list of some useful commands for this week.</para>
      <para>- <emphasis role="bold">Download a file and uncompress it while it
        downloads</emphasis><screen>$wget http://URL/FILE.tar.gz -O - | tar xfz -</screen></para>
      <para>- <emphasis role="bold">If you play loto, try this command to generate the 6 numbers
          :</emphasis><screen>$echo $(shuf -n 6 -i 1-49 | sort -n)</screen></para>
      <para>- <emphasis role="bold">To get the CPU temperature continuously on the
          desktop</emphasis><screen>$while :; do acpi -t | osd_cat -p bottom ; sleep 1; done &amp;</screen></para>
      <para>- <emphasis role="bold">Search for large files and show size and
        location.</emphasis><screen>$find . -size +100000k -exec du -h {} \;</screen></para>
      <para>- <emphasis role="bold">Get a random
        Command</emphasis><screen>$ls /usr/bin | shuf -n 1</screen></para>
      <para>This is useful if you want to explore various random commands. </para>
      <para>More commands :</para>
      <para>- <emphasis role="bold">Bash logger :Log everything from a bash script to a
          file</emphasis><screen>$script /tmp/log.txt</screen></para>
      <para>- <emphasis role="bold">Using NMAP to check if a port is open or
        close</emphasis><screen>$nmap -oG - -T4 -p22 -v 192.168.0.254 | grep ssh</screen></para>
      <para>- <emphasis role="bold">Get the IP of the host your coming from when logged in
          remotely</emphasis><screen>$echo ${SSH_CLIENT%% *}</screen></para>
      <!-- ($ ld: 19.1.11 sm $) -->
    </blockquote>
  </sect2>
</sect1>
