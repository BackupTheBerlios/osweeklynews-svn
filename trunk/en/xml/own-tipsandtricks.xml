<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://www.techrepublic.com/blog/five-tips/five-tips-for-collaborating-in-libreoffice/879">TechRepublic/Jack Wallen: Five tips for collaborating in LibreOffice</ulink>
      </title>
      <para>Takeaway:&#160;Collaboration tools are essential for all sorts of business documents and
        writing projects. Jack Wallen collaborates extensively on his technical content and fiction
        writing — and he uses LibreOffice to get the job done.I write. A lot. </para>
      <para>I write both technical articles and novels, so without the means to collaborate with my
        writing tools, my job would become infinitely harder. Not only would my editor lose all her
        hair, it would take an inordinate amount of extra time before a book could be published or
        an article posted.</para>
      <para>Naturally, as a writer covering open source software, I use the&#160;LibreOffice&#160;office
        suite. Fortunately, LibreOffice includes plenty of tools for those who need to collaborate
        on documents (of nearly any sort). But how can you make best use of those tools? These tips
        will help you collaborate with the best of them. (...)</para>
<!-- ($ Id: 12.6.11 sm $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://www.linuxjournal.com/content/tweaking-text-scribus">LinuxJournal/Bruce Byfield: Tweaking text in Scribus</ulink>
      </title>
      <para>In word processors, users generally settle for an appearance that is good enough. By
        contrast, in a design application like Scribus, you have the tools to adjust the layout
        until it is exactly the way you want.</para>
      <para>That is especially true for text. Scribus not only provides tools for general management
        of the available fonts, but also for micro-managing everything from the size and shape of
        fonts to the spaces between characters and words and how a word is hyphenated at the end of
        a line. (...)</para>
<!-- ($ Id: 16.6.11 sm $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://www.linux.com/learn/tutorials/458715:things-you-cant-do-with-a-gui-finding-stuff-on-linux">Linux.com/Carla Schroder: Things You Can&apos;t Do With a GUI: Finding Stuff on Linux</ulink>
      </title>
      <para>What&apos;s better, a graphical interface or the Linux command line? Both of them. They blend seamlessly on Linux so you don&apos;t have to choose. A good graphical user interface (GUI) has a logical, orderly flow, helps guide you to making the right command choices, and is reasonably fast and efficient. Since this describes a minority of all GUIs, I still live on the command line a lot. The CLI has three advantages: it&apos;s faster for many operations, it&apos;s scriptable, and it is many times more flexible. Linux&apos;s Unix heritage means you can string together commands in endless ways so they do exactly what you want. (...)</para>
<!-- ($ Id: 18.6.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="http://obsforandroid.wordpress.com/2011/06/13/11-things-ive-learned-about-git/">Justine Leng: 11 Things I’ve Learned about Git</ulink>
      </title>
      <para>Now that I’ve spent a few weeks with Git, I decided to record some of the things I
        learned while moving from Subversion (a centralized version control system) to Git (a
        distributed version control system). (...)</para>
<!-- ($ Id: 14.6.11 sm $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://python4kids.wordpress.com/2011/06/14/review-formatting-silly-sentences/">Python4Kids/Brendan Scott: Review, Formatting Silly Sentences</ulink>
      </title>
      <para>We have been covering lots of new concepts very quickly. So now is the time to slow down a bit and go over some of the things we’ve already done, to have a look at them in a little more depth. In particular I want to try to give you some direction on how to make these code samples your own. (...)</para>
<!-- ($ Id: 18.6.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://www.linux.com/learn/tutorials/457103-install-and-configure-openvpn-server-on-linux">Linux.com/Jack Wallen: Install and Configure OpenVPN Server on Linux</ulink>
      </title>
      <para>The VPN is very often critical to working within a company. With working from home being
        such a popular draw to many industries, it is still necessary to be able to access company
        folders and hardware that exists within the LAN. When outside of that LAN, one of the best
        ways to gain that access is with the help of a VPN. Many VPN solutions are costly, and/or
        challenging to set up and manage. Fortunately, for the open source/Linux community, there is
        a solution that is actually quite simple to set up, configure, and manage.&#160;<ulink url="http://openvpn.net/">OpenVPN</ulink>&#160;is that solution and here you will learn how to
        set up the server end of that system.</para>
      <para>The VPN is very often critical to working within a company. With working from home being
        such a popular draw to many industries, it is still necessary to be able to access company
        folders and hardware that exists within the LAN. When outside of that LAN, one of the best
        ways to gain that access is with the help of a VPN. Many VPN solutions are costly, and/or
        challenging to set up and manage. Fortunately, for the open source/Linux community, there is
        a solution that is actually quite simple to set up, configure, and manage.&#160;<ulink url="http://openvpn.net/">OpenVPN</ulink>&#160;is that solution and here you will learn how to
        set up the server end of that system.</para>
      <para><!--($ Id: 15.6.11 sm $)--></para>
    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://www.marques.so/2011/06/opensuse-11-4-with-gnome2-for-the-cool-kids-a-brief-howto/">Nelson Marques: openSUSE 11.4 with GNOME2 for the ‘cool kids’… a brief howto!</ulink>
      </title>
      <para>In the past I’ve written a small howto in Portuguese to perform a openSUSE 11.4 GNOME2
        featured installation in Portuguese. Until today I still receive lots of feedback and some
        personal emails from Portuguese and Brazilian (mostly) users about it.</para>
      <para>I’ve always preached that the nice of openSUSE was the fact of allowing the users to
        install a vast number of repositories and running an updated application layer on top of a
        powerful and reliable base. This article isn’t really about ‘installing’ openSUSE, but
        instead it’s focused on the post install configuration of kinky repositories and stuff that
        by the traditional reasons isn’t provided as standard in openSUSE.</para>
      <para>This document will cover the following aspects:<orderedlist>
          <listitem>
            <para>Installation of sub-pixel font rendering (from a OBS user repository);</para>
          </listitem>
          <listitem>
            <para>Installation of latest development release of Wine (1.3.21);</para>
          </listitem>
          <listitem>
            <para>Installation of the most common multimedia codecs from Packman Essentials;</para>
          </listitem>
        </orderedlist></para>
      <para>At the end, the user should have a working openSUSE 11.4 GNOME2 Desktop with very cool
        sub-pixel font rendering (this really kicks ass) and have an idea of the potential that
        openSUSE can deploy for customized systems. (...)</para>
<!--($ Id: 16.6.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://ostatic.com/blog/so-you-just-deleted-your-production-database-what-now">OStatic/Jon Buys: So You Just Deleted Your Production Database - What Now</ulink>
      </title>
      <para>It doesn’t matter how it happened, it doesn’t matter why, blame can (and probably will) be placed later. What matters now is that your production MySQL database was just deleted from the filesystem while the MySQL daemon was running. The good news is that the server, somehow, is still running fine, and the system is still up. The bad news is that the directory where MySQL stores the database is now empty.</para>
      <para>Take a deep breath, you are running Linux, here is what to do: (...)</para>
<!-- ($ Id: 18.6.11 sat $)-->    </blockquote>
  </sect2>
</sect1>
