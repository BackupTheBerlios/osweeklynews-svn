<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://metaverse.wordpress.com/2011/11/20/preparing-to-install-opensuse-12-1-from-scratch/">Mike McCallister: Preparing to Install openSUSE 12.1 from Scratch</ulink>
      </title>
      <para>You may already know, but <ulink url="http://www.opensuse.org">openSUSE</ulink> released
        v12.1 of the community distribution this week. With a new number before the decimal point, I
        thought it would be a good time for a fresh, clean install on my aging laptop. I could just
        upgrade my existing v11.4 installation, but I like to see what the new install looks like
        from time to time. Doing a clean install also means I can share the process with you
        too.</para>
      <para>Clean installs do require a bit of preparation, though. You will be wiping your
        partitions, so you want to preserve your existing data, and a bit of your configurations
        before embarking on a new install. In this post, I’ll share what I did.(...)</para>
<!-- ($ Id: 21.11.11 sm $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://www.linuxforum.com/content.php/131-Screen-The-Path-For-Beginners">LinuxForum.com/steelmanronald06: Screen - The Path For Beginners</ulink>
      </title>
      <para><emphasis role="bold">Overview &amp; Uses</emphasis></para>
      <para>Screen is a great tool, and highly recommended, tool for any Linux user. It provides a Terminal environment that can withstand network disconnects, random computer restarts, power outages at home and more. With screen you can be assured that if PuTTY, or whatever SSH Client you use, closes you will almost never lose your work. Sadly this is not true for a server restart, as far as I&apos;m aware, but it still provides amazing possibilities. In this wiki you&apos;ll find instructions for installation and customization that will not only enhance screen for the best, but will also make it more enjoyable to use. If you&apos;re like me, once you start to use screen you&apos;ll never go back to mundane old terminal. Please note that all of these steps were done on my system, which I will provide screenshots for, but this is not the only way to set your screen environment up. To add to that, there are also numerous other alterations you may make to your screen environment. Feel free to play around with it and see what you come up with. (...)</para>
<!-- ($ Id: 17.11.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://how-to.linuxcareer.com/learning-linux-commands-dd">LinuxCareer.com/Rares Aioanei: Learning Linux commands: dd</ulink>
      </title>
      <para><emphasis role="bold">1. Introduction</emphasis></para>
      <para>What you&apos;re reading is only the first of the many articles from the &quot;Learning Linux commands&quot; series. Why would we want to do such a thing? Because it&apos;s useful to you to have every option and possible use of a widely used command all in one place. You will find some options or even some commands that you didn&apos;t even knew existed, and your life as a Linux user / admin will become easier. If you&apos;re not afraid of opening a terminal and know the basics of using a Linux system, this article is for you. If you seek further help or information consult manual pages or visit our new <ulink url="http://forum.linuxcareer.com/">Linux forum</ulink>. (...)</para>
<!-- ($ Id: 18.11.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="http://olex.openlogic.com/wazi/2011/more-fun-with-vimscript/">Wazi/Juliet Kemp: More Fun with Vimscript</ulink>
      </title>
      <para>In my <ulink url="http://olex.openlogic.com/wazi/2011/extending-vim-with-scripting/">last article</ulink>, I looked at some of the ways in which you can use <ulink url="http://olex.openlogic.com/packages/vimscript">Vimscript</ulink>, <ulink url="http://olex.openlogic.com/packages/vim">Vim</ulink>‘s built-in scripting language, to set up that text editor to do exactly what you want it to. Apparently you liked what you saw and asked for more, so here are some additional tips and tricks to help you get Vim to jump through the hoops of your choice, including techniques for specifying ranges to work on, accepting user input, and debugging. (...)</para>
<!-- ($ Id: 25.11.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://www.howtoforge.com/perfect-server-opensuse-12.1-x86_64-with-apache2-ispconfig-3">HowtoForge/Falko Timme: The Perfect Server - OpenSUSE 12.1 x86_64 With Apache2 [ISPConfig 3]</ulink>
      </title>
      <para>This is a detailed description about how to set up an <emphasis role="bold">OpenSUSE 12.1 64bit (x86_64) </emphasis> server that offers all services needed by ISPs and
        hosters: Apache web server (SSL-capable) with PHP, CGI and SSI support, Postfix mail server
        with SMTP-AUTH, TLS and virtual mail users, BIND DNS server, Pureftpd FTP server, MySQL
        server, Dovecot POP3/IMAP, Quota, Firewall, Mailman, etc. Since version 3.0.4, ISPConfig
        comes with full support for the nginx web server in addition to Apache; this tutorial covers
        the setup of a server that uses Apache, not nginx. (...)</para>
<!-- ($ Id: 21.11.11 sm $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://suseserver.de/?p=66">Jörg Stephan: openSUSE 12.1 – installation and features</ulink>
      </title>
      <para>openSUSE 12.1 is just released, to have some of the very nice features i need to setup a
        complete new system. So what features are the one you want to have:<itemizedlist>
          <listitem>
            <para>Btrfs – Btrfs is a new filesystem which make usage of B-trees so take a look at
                <ulink url="http://en.wikipedia.org/wiki/Btrfs">http://en.wikipedia.org/wiki/Btrfs</ulink> with this FS we can have a very great
              feature</para>
          </listitem>
          <listitem>
            <para>snapper – snapper is a new system which comes around with openSUSE 12.1 it can
              handle Btrfs snapshots and gives new features to openSUSE such as restoring config
              files after a failure or restore failed upgrades. (...)</para>
          </listitem>
        </itemizedlist></para>
<!-- ($ Id: 21.11.11 sm $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://www.cyberciti.biz/tips/php-security-best-practices-tutorial.html">nixCraft/Vivek Gite: Linux: 25 PHP Security Best Practices For Sys Admins</ulink>
      </title>
      <para>PHP is an open-source server-side scripting language and it is a widely used. The Apache web server provides access to files and content via the HTTP OR HTTPS protocol. A misconfigured server-side scripting language can create all sorts of problems. So, PHP should be used with caution. Here are twenty-five php security best practices for sysadmins for configuring PHP securely. (...)</para>
<!-- ($ Id: 25.11.11 sat $)-->    </blockquote>
  </sect2>
</sect1>
