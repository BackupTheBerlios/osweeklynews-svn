<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink
          url="http://www.techrepublic.com/blog/five-tips/five-tips-for-collaborating-in-libreoffice/879"
          >Techrepublic/Jack Wallen: Five tips for collaborating in LibreOffice</ulink>
      </title>
      <para>Takeaway: Collaboration tools are essential for all sorts of business documents and
        writing projects. Jack Wallen collaborates extensively on his technical content and fiction
        writing — and he uses LibreOffice to get the job done.I write. A lot. </para>
      <para>I write both technical articles and novels, so without the means to collaborate with my
        writing tools, my job would become infinitely harder. Not only would my editor lose all her
        hair, it would take an inordinate amount of extra time before a book could be published or
        an article posted.</para>
      <para>Naturally, as a writer covering open source software, I use the LibreOffice office
        suite. Fortunately, LibreOffice includes plenty of tools for those who need to collaborate
        on documents (of nearly any sort). But how can you make best use of those tools? These tips
        will help you collaborate with the best of them. (...)</para>
<!-- ($ Id: 12.6.11 sm $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://linuxaria.com/howto/5-grep-like-commands?lang=en">Linuxaria: 5 grep like commands</ulink>
      </title>
      <para>Everyone knows (and loves) grep, I’ve also wrote an <ulink url="http://linuxaria.com/pills/grep-per-principianti">article</ulink> on it, but today we’ll see other small utility that have some things in common with it.</para>
      <para>In particular I’ll show you: ﻿pgrep, ﻿grepcidr, ngrep, pdfgrep and ﻿taggrepper.</para>
      <para>All are command line tools to be used with your favorite shell, I’ll show you some example for every command. (...)</para>
      <para><emphasis role="bold">License</emphasis>: <ulink url="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</ulink></para>
<!-- ($ Id: 10.6.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="http://dominique.leuenberger.net/blog/2011/06/gobject-introspection-based-typelib-provides-and-requires/">Dominique Leuenberger: GObject Introspection based typelib Provides and Requires</ulink>
      </title>
      <para>In a constant battle to improve the quality of the packages provided by the openSUSE
        GNOME Team, we have been working hard on additional automatism in adding Provides and
        Requires symbols to our packages. This will make it less common to be able to install a
        package without the needed libraries. (...)</para>
<!-- ($ Id: 6.6.11 sm $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://obsforandroid.wordpress.com/2011/06/03/create-my-first-demo-app-with-jquery-mobile-alpha-4-rails-3/">Justine Leng: Create my first demo app with jQuery Mobile Alpha 4</ulink>
      </title>
      <para>The promising <ulink url="http://jquerymobile.com/">jQuery Mobile</ulink> project is now
        in its first Alpha 4.1 release! What better time to give it a spin with our (err… my) <ulink url="http://rubyonrails.org/">favorite web framework</ulink>?! The principle if simple:
        you include jQuery Mobile on the page, format your markup to conform to its requirements and
        reap the benefits. Yay, let’s write a (very contrived) <ulink url="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</ulink>
        application with Rails 3 and jQuery Mobile! (...)</para>
      <!-- ($ Id: 6.6.11 sm $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://stick.gk2.sk/blog/2011/06/ps1-tricks/">Pavol Rusnak: PS1 tricks</ulink>
      </title>
      <para>Many of you know already about this feature, but some of you don’t so I wanted to share
        it with you. I just changed mine PS1 configuration in ~/.bashrc to look like
        this:<programlisting>export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export PS1=&apos;\[\033[1;37m\][\[\033[1;32m\]\u\[\033[0m\]@\h\[\033[0m\] $? \[\033[1;34m\]\w\[\033[0;35m\]$(__git_ps1 &quot; %s&quot;)\[\033[1;37m\]]\[\033[0m\] &apos;</programlisting></para>
      <para>Take a look at the following picture to see how it works:</para>
      <mediaobject>
        <imageobject>
          <imagedata fileref="http://stick.gk2.sk/blog/wp-content/uploads/2011/06/ps1tricks-300x125.png"/>
        </imageobject>
      </mediaobject>
      <para>or check the <ulink url="http://youtube.com/watch?v=AKNgtHnKgJc">video on youtube</ulink>.</para>
      <para>The number between user@host and the current working directory is the exit status of the
        most recently executed command (or pipeline). This is great because you don’t have to type
        echo $? everytime you want to find it out. The __git_ps1 magic will print git branch name if
        you are inside of the git repository. Furthermore it will add special characters indicating
        the state of the repo: % – untracked files present, + – new files added, * – some tracked
        files changed, $ – there is something in the stash (see git stash --help). Pretty cool,
        right?</para>
      <para><emphasis role="bold">License</emphasis>: <ulink url="http://creativecommons.org/licenses/by-nc-nd/3.0/">CC-BY-NC-ND</ulink></para>
      <para><!--($ Id: 9.6.11 sm $)--></para>
    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://everydaylht.com/howtos/system-administration/undelete-files-on-an-ext3-or-ext4-file-system/">EveryDayLHT: Undelete Files on an ext3 or ext4 File System</ulink>
      </title>
      <para>So you’ve been futzing round in the file system, and been over vigorous with the rm command and deleted a crucial file that you or (more scarily) a significant other, can’t live without. What to do? After that initial hot flush has died down, you must be calm, and work fast. You have three options: (...)</para>
<!--($ Id: 10.6.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://beginlinux.com/desktop/opensuse/using-and-understanding-ipv6-on-opensuse-11">BeginLinux: Using and Understanding IPv6 on openSUSE 11</ulink>
      </title>
      <para>So IPv6 has been around a while now but do we know any benefits? We may know that it is 128bits long and too difficult to type but if that is all then we do ourselves a little injustice in not knowing how easy IPv6 can make our lives. So let us take a look at some of the automation features of IPv6 including auto-address assignment, router discovery and why we do not need a broadcast address. (...)</para>
<!--($ Id: 10.6.11 sat $)-->    </blockquote>
  </sect2>
</sect1>
