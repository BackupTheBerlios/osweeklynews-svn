<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://www.linuxjournal.com/video/get-firefox-menu-button-linux">Linux Journal/Shawn Powers: Get Firefox Menu Button in Linux</ulink>
      </title>
      <para>The Windows version of Firefox comes with a fancy menu button in the title bar. Linux doesn&apos;t have that exact feature, but you can come close. Shawn Powers shows us how.</para>
<!-- ($ Id: 23.9.11 sat $)-->    </blockquote>
  </sect2>
<!--
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://elevenislouder.blogspot.com/2011/08/introduction-to-find.html">Eleven is Louder: An Introduction to Find</ulink>
      </title>
      <para>Learning find can seem daunting at first, but it is worth learning. There is no single more useful search tool for UNIX like systems. You could almost consider find a very primitive scripting language in itself as find can find the files you request and then perform tasks. (...)</para>
    </blockquote>
  </sect2> -->  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="http://olex.openlogic.com/wazi/2011/create-your-own-syntax-highlighting-in-vim/">Wazi/Juliet Kemp: Create Your Own Syntax Highlighting in Vim</ulink>
      </title>
      <para>In text editors like <ulink url="http://olex.openlogic.com/packages/vim">Vim</ulink>, syntax highlighting is the feature that shows defined components in different colors depending on their functions in the file. Vim has code syntax highlighting already available for a huge array of programming languages, including <ulink url="http://olex.openlogic.com/packages/php">PHP</ulink>, <ulink url="http://olex.openlogic.com/packages/python">Python</ulink>, HTML, <ulink url="http://olex.openlogic.com/packages/ruby">Ruby</ulink>, JavaScript, and more, and most of them are installed by default in the $VIM/syntax/ directory, so in most cases you can just open up your source code files and see different parts appropriately color-coded. But what if you’re using a little-known language that doesn’t have a preinstalled syntax file? Or if you’re working with a different type of file altogether and want to create syntax highlighting from scratch? This tutorial shows how easy and even fun it is to write your own syntax highlighting rules for Vim. (...)</para>
<!-- ($ Id: 17.9.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://bashshell.net/regular-expressions/string-matches-in-regular-expressions/">BashShell.net/Mike: String Matches in Regular Expressions</ulink>
      </title>
      <para>The parentheses allows you to use regular expressions to perform string matches, or matches to actual words.   Thus you may write a search that is looking for “virtual” or “main” with (virtual|mail).  Note they are separated by a pipe.  These are string searches so you are looking for “virtual” not “v” or “i” or “r” etc. (...)</para>
<!-- ($ Id: 17.9.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://www.linuxjournal.com/content/parallel-programming-crash-course">Linux Journal/Joey Bernard: Parallel Programming Crash Course</ulink>
      </title>
      <para>I&apos;ve been covering various scientific programs the past few months, but sometimes it&apos;s hard to find a package that does what you need. In those cases, you need to go ahead and write your own code. When you are involved with heavy-duty scientific computing, you usually need to go to parallel computing in order to get the runtimes down to something reasonable. This month, I give a crash course in parallel programming so you can get a feel for what is involved. (...)</para>
<!-- ($ Id: 17.9.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://www.ibm.com/developerworks/linux/library/l-lpic1-v3-101-2/index.html?ca=drs-">IBM DeveloperWorks/Ian Shields: Learn Linux, 101: Boot the system</ulink>
      </title>
      <para><emphasis role="bold">Summary:</emphasis>ý Learn to guide your Linux system through the
        boot process. You can use the material in this article to study for the LPI 101 exam for
        Linux system administrator certification, or just to learn about the boot process.
        (...)</para>
<!--($ Id: 21.9.11 sm $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://tychoish.com/rhizome/9-awesome-ssh-tricks/">Sam Kleinman: 9 Awesome SSH Tricks</ulink>
      </title>
      <para>Sorry for the lame title. I was thinking the other day, about how awesome SSH is, and how it&apos;s probably one of the most crucial pieces of technology that I use every single day. Here&apos;s a list of 10 things that I think are particularly awesome and perhaps a bit off the beaten path. (...)</para>
<!-- ($ Id: 23.9.11 sat $)-->    </blockquote>
  </sect2>
</sect1>
