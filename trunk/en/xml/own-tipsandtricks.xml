<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://thefreecountry.wordpress.com/2011/05/21/a-bit-about-fluxbox/">Linux
          Journal/Emre Sevinc: Grabbing Your Music from YouTube: Do It Your Way </ulink>
      </title>
      <para>A few months ago my father-in-law said that his company was renewing their computers.
        When I heard that some second-hand PCs were about to be available, I decided to take some of
        them, thinking that a few old PCs would not hurt when it comes to enlarging my home network
        and doing experiments with GNU/Linux. When my father-in-law asked if it would be possible to
        reformat one of those computers so that he could use it at his home, I jumped at the
        opportunity to bring another user to the world of GNU/Linux. A few days passed and he was a
        happy user of his new computer running Ubuntu, and he was enjoying his Firefox while he
        explored the web. I don’t know what other people think or usability studies say, but he said
        that he had no problem using the system and he was surprised that I did not have to install
        an anti-virus. (...)</para>
<!-- ($ Id: 24.5.11 sm $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://anksos.blogspot.com/2011/05/how-to-install-enlightenment-e17-in.html">Anastasios Ksouzafeiris: How to install Enlightenment (E17) in openSUSE 11.4</ulink>
      </title>
      <para>Hello folks, two days ago I installed on my netbook Enlightenment WM (window manager). A
        very lightweight WM with the minimalistic environment that i like.. After 30 minutes and
        search actually you can understand how it works, it&apos;s really easy if you understand that all
        the apps are modules and you have only to load them or unload them.. After this quick
        introduction i think we must go to the installation and see it by your self. (...)</para>
<!-- ($ Id: 18.5.11 sm $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://bashshell.net/commands/using-nl-to-number-lines/">BashShell.net/mike: Using nl to Number Lines</ulink>
      </title>
      <para>The nl utility is use for numbering lines of a text file.    It’s easy to use, and there are only a few options that you need to remember.  Start by creating a file with ten consecutive lines. (...)</para>
<!-- ($ Id: 20.5.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="http://python4kids.wordpress.com/2011/05/17/a-functioning-stand-alone-python-program/">Python4Kids/Brendan Scott: New Tutorial - A Functioning Stand Alone Python Program</ulink>
      </title>
      <para>In the last tutorial we created a file using our text editor and saved a function to it.  This file was called trivia.py and in it was the module “trivia”.  We then started Python in a console and import()ed the trivia module.  Once imported, it created a “namespace” and we could access the askQuestion() function from within the trivia namespace by using a dot – trivia.askQuestion().  In order for the module to work properly we had to include an import statement within the module itself so that everything that the module relied upon was imported within the module.  We then manually loaded our data from a pickle file we created and, manually, ran the askQuestion() function on the first question in our data store.   Finally we added docstrings to the function and the module.</para>
      <para>In this tutorial we’re going to try to do much the same thing again, but without using the Python interpreter.  That is, we will need to take the things we did in the interpreter and implement them in our trivia.py file.  We will have a functioning (although still quite simple) stand alone Python program. (...)</para>
<!-- ($ Id: 20.5.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://www.serverwatch.com/tutorials/article.php/3933691/article.htm">ServerWatch/Joe Brockmeier: Discover Rootkits With Unhide</ulink>
      </title>
      <para>If your system has been rooted, you can&apos;t trust utilities like ps to show processes from the rootkit. For ferreting out nasties, you&apos;ll want to check out unhide and unhide.rb.</para>
      <para>If you&apos;ve ever encountered a rootkit, you know the symptoms -- suddenly a box is sluggish or sending out gobs of network traffic -- but running top and ps aux show nothing that should be the culprit. One quick and dirty way to turn up the offending processes is to use the unhide utility or its Ruby counterpart unhide.rb. It&apos;s a helpful tool to have around for Linux server management. (...)</para>
      <para><emphasis role="bold">Editors Note</emphasis>: unhide_rb packages for openSUSE are <ulink url="http://software.opensuse.org/search?p=1&amp;baseproject=ALL&amp;q=unhide">available from OBS&apos;s security repo</ulink>.</para>
<!-- ($ Id: 20.5.11 sat $)-->    </blockquote>
  </sect2>
</sect1>
