<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink
          url="http://www.techradar.com/news/software/operating-systems/how-your-secure-your-linux-system-915651"
          >Techradar/Mayank Sharma: How to secure your Linux system</ulink>
      </title>
      <para>Are you running Linux just because you think it's safer than Windows? Think again. Sure,
        security is a built-in (and not a bolt-on) feature and extends right from the Linux kernel
        to the desktop, but it still leaves enough room to let someone muck about with your /home
        folder.</para>
      <para>Linux might be impervious to viruses and worms written for Windows, but that's just a
        small subset of the larger issue. Attackers have various tricks up their sleeves to get to
        those precious bits and bytes that make up everything from your mugshot to your credit card
        details.</para>
      <mediaobject>
        <imageobject>
          <imagedata
            fileref="http://cdn.mos.techradar.com//Review%20images/Linux%20Format/LXF%20139/LXF139.secure.privoxy-218-85.jpg"
          />
        </imageobject>
      </mediaobject>
      <para>Computers that connect to the internet are the ones most exposed to attackers, although
        computers that never get to see online action are just as vulnerable. Think of that ageing
        laptop or that old hard disk you just chucked away without a second thought. Bad move.
        (...)</para>
      <!-- ($ ld: 5.1.11 sm $) -->
    </blockquote>
    <blockquote>
      <title><ulink url="http://www.linuxlinks.com/article/20110101010956149/SystemCleaning.html"
          >LinuxLinks: 5 of the Best Free Linux System Cleaning Tools</ulink></title>
      <para>There are lots of ways of improving the performance of your computer. We investigated a
        number of solutions in our feature entitled <ulink
          url="http://www.linuxlinks.com/article/20090927065836306/UbuntuTips-Booting-Part1.html"
          >Ubuntu Tips - Boot Faster</ulink> which concentrated on shortening the time taken for a
        machine to boot. These included disabling services that are not needed, concurrent booting,
        and reprofiling the boot sequence. The article also gave tips on optimising the general
        system performance including ways to make more efficient use of memory, improving hard disk
        performance, and by using a lightweight desktop environment. These can all have a marked
        effect on minimising the boot process. However, having a machine that is quick to boot is
        only one area that needs to be tackled if a computer is going to remain responsive. </para>
      <para>Many readers will have witnessed their computer system becoming progressively slower in
        use over time. This particularly affects Windows so much so that over time it can feel like
        the machine is running at half speed. This is in part due to users continually installing
        more applications, and not performing system maintenance. Other factors include ineffective
        uninstallation routines, Microsoft's propensity for almost daily patches and security
        updates, hard drives full of temporary files, a bloated registry, and poorly configured
        antivirus software. These types of issues also affect Linux albeit to a lesser degree.
        Nevertheless, if a Linux machine is to remain in pristine condition, there is a genuine need
        for users to run software that vacuums up the detritus, wiping clean applications, deleting
        cookies, shredding temporary files, removing logs, and other types of system maintenance.
        (...)</para>
      <!-- ($ ld: 5.1.11 sm $) -->
    </blockquote>
  </sect2>
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink
          url="http://www.ibm.com/developerworks/linux/library/l-lpic1-v3-101-3/index.html?ca=drs-"
          >IBM Developerworks/Ian Shields: Learn Linux, 101: Runlevels, shutdown, and reboot</ulink>
      </title>
      <para><emphasis role="bold">Learn to shut down or reboot your Linux system, warn users that
          the system is going down, and switch to a more or less restrictive runlevel. You can use
          the material in this article to study for the LPI 101 exam for Linux system administrator
          certification, or just to learn about shutting down, rebooting, and changing
          runlevels.</emphasis></para>
      <para><emphasis role="bold">Overview</emphasis></para>
      <para>In this article, learn to shut down or reboot your Linux system, warn users that the
        system is going down, and switch to single-user mode or a more or less restrictive runlevel.
        Learn to: <itemizedlist>
          <listitem>
            <para>Set the default runlevel</para>
          </listitem>
          <listitem>
            <para>Change between runlevels</para>
          </listitem>
          <listitem>
            <para>Change to single-user mode</para>
          </listitem>
          <listitem>
            <para>Shut down or reboot the system from the command line</para>
          </listitem>
          <listitem>
            <para>Alert users about major system events, including switching to another
              runlevel</para>
          </listitem>
          <listitem>
            <para>Terminate processes properly</para>
          </listitem>
        </itemizedlist></para>
      <para>Unless otherwise noted, the examples in this article use a Fedora 8 system with a 2.6.26
        kernel. The upstart examples use Fedora 13 with a 2.6.34 kernel, or Ubuntu 10.10 with a
        2.6.35 kernel. Your results on other systems may differ. </para>
      <para>This article helps you prepare for Objective 101.3 in Topic 101 of the Linux
        Professional Institute's Junior Level Administration (LPIC-1) exam 101. The objective has a
        weight of 3. (...)</para>
      <!-- ($ ld: 5.1.11 sm $) -->
    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://www.linux.com/learn/tutorials/393476:2010-vim-guide-roundup">Linux.com:
          2010 VIm Guide Roundup</ulink>
      </title>
      <para>Making your New Year&apos;s Resolutions for 2011? How about adding, &quot;learn
        Vim&quot; to the list? We make it easy, with all the Vim tutorials we&apos;ve run on
        Linux.com in 2010.</para>
      <para>This year we ran a series of tutorials on Vim ranging from the basics to more advanced
        topics like extending Vim with scripts and plugins. If you missed them the first time
        around, here they are again to help you get ready for efficient text editing in 2011.</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Vim 101: A Beginner&apos;s Guide to Vim</emphasis></para>
          <para>This tutorial covers Vim&apos;s modes, the basics of moving using Vim&apos;s
            keybindings, editing, searching and replacing, and much more. Read the rest in <ulink
              url="http://www.linux.com/learn/tutorials/228600-vim-101-a-beginners-guide-to-vim">A
              Beginner&apos;s Guide to Vim</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vim 201: An Intermediate Guide to Vim</emphasis></para>
          <para>Many use Vim, but don&apos;t make use of nearly all the features. In this guide,
            we&apos;ll take a look at some of the intermediate features offered by Vim, including
            abbreviations, word completion, and editing multiple documents in the same Vim session.
            Get the full scoop in <ulink
              url="http://www.linux.com/learn/tutorials/243002-vim-201-an-intermediate-guide-to-vim"
              >An Intermediate Guide to Vim</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vim 301: Getting Adept at Vim</emphasis></para>
          <para>If you&apos;ve worked your way through the first two guides, you should be in for
            smooth sailing using Vim. But even with all that under your belt, you&apos;ve only
            scraped the surface of what Vim can do. This tutorial covers setting up a Vim
            configuration file, using the &quot;folding&quot; features, getting to the shell from
            Vim, and the dot. </para>
          <para>It&apos;s all in <ulink
              url="http://www.linux.com/learn/tutorials/262147-vim-301-getting-adept-at-vim">Getting
              Adept at Vim</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vim 401: Extending Vim and More</emphasis></para>
          <para>The next installment goes into more detail on plugins and scripts, using Vim&apos;s
            GUI (yes, it does have a GUI!), bookmarks, and where to find scripts and plugins. Check
            out <ulink
              url="http://www.linux.com/learn/tutorials/264315-vim-401-extending-vim-and-more"
              >Extending Vim and More</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Using Spell Checking in Vim</emphasis></para>
          <para>If you&apos;re new to Vim and/or using Vim in text mode, it&apos;s not obvious that
            Vim even supports spell checking. But it does, and it&apos;s easy to use once you turn
            it on. If you&apos;re tackling prose in Vim, you&apos;ll definitely want to read <ulink
              url="http://www.linux.com/learn/tutorials/357267-using-spell-checking-in-vim">Using
              Spell Checking in Vim</ulink>.</para>
        </listitem>
      </itemizedlist>
      <para>Look for more guides and tutorials in 2011 on Linux utilities and tools. Have some
        suggestions? Drop us a note in the comments!</para>
      <!-- ($ ld: 29.12.10 sm $) -->
    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="https://www.packtpub.com/article/testing-tools-techniques-python">Packt/Daniel
          Arbuckle: Testing Tools and Techniques in Python</ulink>
      </title>
      <para>This article by Daniel Arbuckle, author of <ulink url="http://bit.ly/OWN1561">Python
          Testing</ulink>, introduces code coverage and continuous integration, and teaches how to
        tie automated testing into version control systems. In this article, we will</para>
      <itemizedlist>
        <listitem>
          <para>Discuss code coverage, and learn about coverage.py</para>
        </listitem>
        <listitem>
          <para>Discuss continuous integration, and learn about buildbot</para>
        </listitem>
        <listitem>
          <para>Learn how to integrate automated testing into popular version control systems
            (...)</para>
        </listitem>
      </itemizedlist>
      <!-- ($ ld: 31.12.10 sat $) -->
    </blockquote>
    <blockquote>
      <title>
        <ulink
          url="http://balau82.wordpress.com/2010/12/28/coding-styles-comparison-in-the-open-source-software-world/"
          >Balau: Coding styles comparison in the Open Source Software world</ulink>
      </title>
      <para>While looking for existing C coding standards I discovered that the GNU and Linux
        projects officially suggest very different styles. Inside the Linux kernel documentation,
        Linus Torvalds goes so far as to mock GNU coding standards:</para>
      <para><quote>First off, I’d suggest printing out a copy of the GNU coding standards, and NOT
          read it. Burn them, it’s a great symbolic gesture.</quote></para>
      <para>At this point I wanted to understand the difference between the coding styles of
        established open source projects. When I say <quote>styles</quote> I mean mainly the source
        code appearance, and the standards that help to read and maintain the code. Here’s a list of
        coding styles that I read:</para>
      <itemizedlist>
        <listitem>
          <para>Linux kernel coding style</para>
        </listitem>
        <listitem>
          <para>GNU Coding Standards</para>
        </listitem>
        <listitem>
          <para>Qt Coding Style</para>
        </listitem>
        <listitem>
          <para>Code Conventions for the Java TM Programming Language (PDF version)</para>
        </listitem>
        <listitem>
          <para>Style Guide for Python Code</para>
        </listitem>
        <listitem>
          <para>GNOME Programming Guidelines</para>
        </listitem>
        <listitem>
          <para>Kdelibs Coding Style</para>
        </listitem>
        <listitem>
          <para>Mono Coding Guidelines</para>
        </listitem>
        <listitem>
          <para>Christian Neukirchen’s Ruby Style Guide</para>
        </listitem>
        <listitem>
          <para>The Unofficial Ruby Usage Guide(...)</para>
        </listitem>
      </itemizedlist>
      <!-- ($ ld: 31.12.10 sat $) -->
    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink
          url="http://vavai.net/2010/12/domainkeysdkim-implementation-on-zimbrasles-11-sp1-with-opendkim/"
          >Masim Sugianto: DomainKeys/DKIM Implementation on Zimbra+SLES 11 SP1 with
          OpenDKIM</ulink>
      </title>
      <figure id="fig.zimbra">
        <title>Zimbra</title>
        <mediaobject>
          <imageobject>
            <imagedata width="25%"
              fileref="http://vavai.com/wp-content/uploads/2010/12/zimbra-logo32.jpg"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Following tutorial will covers DomainKeys/DKIM implementation using OpenDKIM on SLES or
        openSUSE. Domain Keys Identified Mail (DKIM) is a technology designed to make it difficult
        or impossible for criminals to steal the identities of legitimate organizations. This
        authentication technology allows good senders to <quote>sign</quote> a message to prove that
        it really did come from them..</para>
      <para>DKIM originally written as sender authentication protocol developed in order to address
        the problem of forged email messages. Yahoo! released the DomainKeys specification and Cisco
        released the Internet Identified Mail specification. Both methods are based on cryptographic
        message signing. The two efforts have been merged, and the combined specification is known
        as DomainKeys Identified Mail (DKIM).</para>
      <para>These are various options for implementing DomainKeys Signature : by using DK-Filter,
        DKIM-milter, OpenDKIM and also by using Amavisd-new DKIM implementation. Don’t be confused
        with all the terms. All method have similar function, signing your email as
          <quote>trusted</quote> or legitimate email. (...)</para>
      <!-- ($ ld: 27.12.10 sm $) -->
    </blockquote>
  </sect2>
</sect1>
