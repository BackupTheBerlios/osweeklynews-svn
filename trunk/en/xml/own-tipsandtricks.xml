<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://tuxtweaks.com/2010/12/converting-audio-files-with-gstreamer/"
          >TuxTweaks/Linerd: Converting Audio Files with GStreamer</ulink>
      </title>
      <para>I've written before about <emphasis role="bold">ripping audio CD's</emphasis> from the
        command line (<ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cds-part-1/">part
          1</ulink>, <ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cds-part-2/">part
          2</ulink>, <ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cd%e2%80%99s-part-3/"
          >part 3</ulink>, <ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cd’s-part-4/">part
          4</ulink>). Certainly, if you're just ripping a new CD, then just convert the audio to
        your chosen format at that time. But maybe you've been archiving your music in <emphasis
          role="bold">FLAC</emphasis> format or you purchased some high bit-rate <emphasis
          role="bold">MP3</emphasis>'s for download and now you want them in a different format or
        bit-rate for your music player. </para>
      <para><emphasis role="bold">GStreamer</emphasis> is an open source multimedia framework that's
        used by many <emphasis role="bold">GNOME</emphasis> applications and a few <emphasis
          role="bold">KDE</emphasis> apps as well. It's really meant to be used by programmers to
        create rich applications by accessing GStreamer's API. Thankfully there's also a command
        line interface available for us non-programmers. It's really meant for only testing, but
        that's OK. If it works, it works. </para>
      <para>Now you may be asking yourself why you'd want to use <emphasis role="bold"
          >GStreamer</emphasis> to convert audio when there are so many other choices available.
        Well, one really cool thing about GStreamer is that the metadata is preserved through the
        conversion process. That means you won't have to go through and <ulink
          url="http://tuxtweaks.com/2008/11/tagging-mp3-files-in-linux-with-easytag/">re-tag</ulink>
        your files after converting. (...)</para>
      <!-- ($ ld: 15.12.10 sm $) -->
    </blockquote>
  </sect2>
  
  
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title><ulink url="http://opensuse.terrorpup.net/?p=204">Chuck Payne: Tips and Trick: fdisk helps find and show your drives.</ulink></title>
      <para>Have you every wanted to know how many hard drives a system has? Or how to find that USB
        drive that you just plugged in, that isn’t showing up? It very simple with fdisk. Fdisk —
        Partition table manipulator for Linux. Is also a great tool to help you. To see your drives
        run the following command… (...) <!-- ($ ld: 10.12.10 sm $) --></para>
    </blockquote>
  </sect2>
  <!--
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>super article</title>
      <para>bin/sh</para>
    </blockquote>
  </sect2> -->
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title><ulink
          url="http://www.osnews.com/story/24111/Wake_Your_Linux_Up_From_Sleep_for_a_Cron_Job">*
          OSNews/Dedoimedo: Wake Your Linux Up From Sleep for a Cron Job </ulink></title>
      <para>Here's the latest in our new series on OS tips from power users: a seemingly trivial
        task. You have a computer, most likely a laptop, that you wish to keep suspended while
        you're not working. For example, let's say overnight. At the same time, you wish to run a
        handful of maintenance tasks, like backups and cleanup, which you don't normally do during
        the day. So you need a mechanism that will send your machine to sleep, wake it up when
        necessary, run cron jobs, then send it back to sleep again. </para>
      <para>Possible? Well, if it weren't, I would not be writing this tutorial, but it definitely
        is not trivial. In this tutorial, I will show you how you can do this, in a relatively
        simple and safe manner. We will check the requirements for the task. We will examine a
        typical use case. We will discuss the many small-print items revolving around this idea,
        e.g. why you need to be extra careful with waking from sleep for cron jobs. And we'll do a
        few other things, besides. . (...) <!-- ($ ld: 10.12.10 sm $) --></para>
    </blockquote>
  </sect2>
</sect1>
