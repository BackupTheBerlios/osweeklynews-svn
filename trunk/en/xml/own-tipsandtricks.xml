<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://ironman.darthgibus.net/?p=148">Fred Blaise: Talend Studio on Linux:
          making it look nicer</ulink>
      </title>
      <para>Doesn’t look like on Mac on Win32, does it? You can find several howto around, the GTK+
        reference here, a GTK+ theme how to. Create a .gtkrc-eclipse in your home directory, with
        the following inside: (...)</para>
<!-- ($ Id: 10.12.11 sm $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://bashshell.net/script-of-the-week/using-diff-to-compare-directories/">BashShell.net/Mike: Using diff to Compare Directories</ulink>
      </title>
      <para>The diff command compares two files or directories and returns the differences.  This provides you a way to monitor changes in an important directory like /etc which houses most configuration files on a Linux system.  In order for this to work properly you will need to create a file that lists the content of the /etc directory so that you can make a comparison. (...)</para>
<!-- ($ Id: 09.12.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="http://how-to.linuxcareer.com/c-development-on-linux-functions-v">LinuxCareer.com/Rares Aioanei: C development on Linux - Functions - V.</ulink>
      </title>
      <para><emphasis role="bold">1. Introduction</emphasis></para>
      <para>The C standard library offers a plethora of functions for many usual tasks. Also there are lots of libraries for extra functionality, like GUI design (GTK+) or database interfacing (libpq). However, as you advance in the C programming world, you will soon find yourself repeating the same instructions in the same order over and over again and that will become time-consuming and inefficient. So you can just wrap all those instructions in a function and just call said function when you need it. Here&apos;s what you&apos;re gonna learn by reading this article, plus some useful tips that will make your life easier. Any suggestions or problems go to the <ulink url="http://forum.linuxcareer.com/">forums</ulink>, as before. (...)</para>
<!-- ($ Id: 10.12.11 sat $)-->    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://beginlinux.com/desktop/opensuse/automate-install-with-autoyast-answer-files">BeginLinux.com: Automate Install With AutoYaST Answer Files</ulink>
      </title>
      <para>This is the final article on installing opensuse. To recap we&apos;ve covered <ulink url="http://beginlinux.com/desktop/opensuse/configuring-the-dhcp-server">Configuring the DHCP Server</ulink>, <ulink url="http://beginlinux.com/desktop/opensuse/installing-apache-on-opensuse">Installing Apache on OpenSUSE</ulink>, <ulink url="http://beginlinux.com/desktop/opensuse/opensuse-pxe-boot">OpenSUSE PXE Boot</ulink> and today we&apos;ll be tackling how to automate an install with AutoYaST answer files.</para>
      <para>The final part of our installation jigsaw puzzle is to create the answer file, in SUSE this is known as AutoYaST. If we were only ever to install one server or one desktop then maybe we could do without answer files; however where we need to install a few or many then AutoYaST provides us with an unattended installation:- a build script to create consistency and compliance we regulatory bodies governing security. In short we need answer files. (...)</para>
<!-- ($ Id: 09.12.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://blog.adityapatawari.com/2011/12/controlling-your-linux-server-using.html">Aditya Patawari: Controlling Your Linux Server Using Twitter</ulink>
      </title>
      <para>Last weekend I wrote about &quot;<ulink url="http://blog.adityapatawari.com/2011/11/using-twitter-to-monitor-your-linux.html">Using Twitter To Monitor Your Linux Server</ulink>&quot; using a command line client &quot;<ulink url="http://myst.adityapatawari.com/">MYST</ulink>&quot;. I have added a new feature to MYST using which you can tell your server to execute commands by using DMs. Let us start configuration for the same. (...)</para>
<!-- ($ Id: 09.12.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://olex.openlogic.com/wazi/2011/shh-openssh-secrets-here/">Wazi/Carla Schroder: Shh! OpenSSH Secrets Here</ulink>
      </title>
      <para>If you routinely use multiple computers, it can be a challenge to keep your data files organized and to manage multiple login IDs. <ulink url="http://olex.openlogic.com/packages/openssh">OpenSSH</ulink> can help you with those tasks. It’s a powerful, secure tool that lets you share files without having to set up a file server, run applications remotely, and perform remote administration chores quickly and securely. You probably already know how to <ulink url="http://olex.openlogic.com/wazi/2011/stop-using-ftp-how-to-transfer-files-securely/">use OpenSSH for file transfers</ulink>. Here we’ll uncover some less well-known OpenSSH tricks that can make life easier for roaming computer users.</para>
      <para>To use the software, you should have the OpenSSH server and client installed and working on all the computers you need to access. In this article I use local for the computer we’re launching an OpenSSH session from, and remote to refer to the computer we’re logging into. (...)</para>
<!-- ($ Id: 09.12.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="https://www.linux.com/learn/tutorials/519933-embiggen-your-kvm-virtual-machines">Linux.com/Carla Schroder: Embiggen Your KVM Virtual Machines</ulink>
      </title>
      <para>When you provision virtual machines, you try to ensure that they have the storage that they need. But as we all know, storage needs tend to change over time. If you have KVM machines that need more space, we can up their storage with tools you already have handy.</para>
      <para>In <ulink url="https://www.linux.com/learn/tutorials/510124-managing-live-and-offline-migrations-with-linuxs-kvm">Managing Live and Offline Migrations with Linux&apos;s KVM</ulink> we learned how to migrate virtual machines, and how to manage disk storage. Today we&apos;ll learn how resize VMs and add storage space. (...)</para>
<!-- ($ Id: 09.12.11 sat $)-->    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://www.ibm.com/developerworks/linux/library/os-python-kvm-scripting1/index.html">IBM developerWorks/Paul Ferrill: Scripting KVM with Python, Part 1: libvirt</ulink>
      </title>
      <para>Virtualization is standard equipment with most server operating systems on the market today. In the Linux® world, there are two primary choices for server virtualization: the Kernel-based Virtual Machine (KVM) and Xen. KVM is the primary technology that Red Hat and others use. Although Citrix owns Xen, much of the core functionality remains in the public domain.</para>
      <para>The Virtual Machine Manager (VMM, or virt-manager) project provides a tool for managing the creation and running of both KVM and Xen virtual machine (VM) instances. VMM is written in Python using the GTK+ library for graphical user interface construction. The real work is done through the libvirt library, which is what you&apos;ll be using for this article series. Although libvirt is a Red Hat-sponsored effort, it remains an open source project available under the GNU Lesser General Public License.</para>
      <para>libvirt is made up of several different pieces, including the application programming interface (API) library, a daemon (libvirtd), and a default command-line utility (virsh). For the purposes of this article, all testing is done using Ubuntu Server version 11.04. The Installation and setup section covers everything I did to configure my server for developing the scripts presented here. Part 1 covers the basics of libvirt and Kernel-based Virtual Machine (KVM) virtualization along with a few command-line scripts to whet your appetite. Part 2 will dive deeper and show you how you can build your own virtualization management tools using libvirt, Python, and wxPython. (...)</para>
<!-- ($ Id: 09.12.11 sat $)-->    </blockquote>
    <blockquote>
      <title><ulink url="http://xadmin.info/?p=120">Jörg Stephan: [UPDATE] Strange, someone has an
          idea?</ulink></title>
      <para>Thanks a lot to <ulink url="http://forums.opensuse.org"
        >forums.opensuse.org</ulink></para>
      <para>As we now found out the boot/shutdown problems where just caused by <emphasis
          role="bold">systemd</emphasis>ýso, while booting (on the grub menu) you can switch to
          <emphasis role="bold">systemV</emphasis> via <emphasis role="bold">F5 </emphasis>and that
        just worked.</para>
      <para>So now we must talk about making systemV ýdefault again, so just look what SUSEhelp post
        us via IRC</para>
      <para><quote>
          <emphasis role="italic"><emphasis role="bold">&lt;SUSEhelp&gt; By default, openSUSE now
              boots using systemd. In case of trouble, you can switch back to the old way using
              sysvinit by pressing the F5 key on the boot. If you want to switch to sysvinit
              permanently, install the sysvinit-init package. To switch back to systemd, reinstall
              the systemd-sysvinit package.</emphasis></emphasis>
        </quote></para>
      <para>So as easy as it is
        told:<programlisting>zypper in sysvinit-init

Problem: sysvinit-init-2.88+-66.58.2.x86_64 conflicts with namespace:otherproviders(sbin_init) provided by systemd-sysvinit-37-3.4.1.x86_64
Solution 1: deinstallation of systemd-sysvinit-37-3.4.1.x86_64
Solution 2: do not install sysvinit-init-2.88+-66.58.2.x86_64

Choose from above solutions by number or cancel [1/2/c] (c):</programlisting></para>
      <para>Now take solution 1, it will replace systemd.</para>
      <!--($ Id: 10.12.11 sm $)-->
    </blockquote>
    <blockquote>
      <title><ulink
          url="http://vavai.net/2011/12/installing-zimbra-mail-server-on-sles-11-sp1-64-bit-in-less-than-30-minutes-part-1/"
          >Masim Sugianto: Installing Zimbra Mail Server on SLES 11 SP1 64 bit in less than 30
          Minutes-Part 1</ulink></title>
      <para>The following article will explain about the quick and easy tutorial : how to installing
        Zimbra Mail Server on SUSE Linux Enterprise Server 11 SP1 64 bit.ýI will use the <ulink
          url="http://vavai.net/2011/11/suse-linux-enterprise-server-11-sp1-minimal-server-appliance/"
          >Minimal Server Appliance</ulink> in this tutorial to simplify the installation
        process.ýHere are some notes related to the server setting :<itemizedlist>
          <listitem>
            <para>WARNING : This guide using Preload ISO and will erase the entire contents of hard
              disk! ýIf you do not want to delete your existing data, consider using Virtualization
              server or use ISO-LiveCD.</para>
          </listitem>
          <listitem>
            <para>Zimbra server will be using a private IP which will be translated into public IP
              using NAT</para>
          </listitem>
          <listitem>
            <para>Zimbra will be setting up using Split-DNS concept. This means that in the internal
              network, mail server will be recognized based on a private IP network, while from the
              outside will be recognized based on the public IP. For this purpose, the internal DNS
              will be set up in Zimbra Mail Server</para>
          </listitem>
          <listitem>
            <para>Zimbra Fully Qualified Domain Name : mail.vavai.net, private IP : 192.168.1.254
              (...)</para>
          </listitem>
        </itemizedlist></para>
      <para><ulink
          url="http://vavai.net/2011/12/installing-zimbra-mail-server-on-sles-11-sp1-64-bit-in-less-than-30-minutes-part-2/"
          >Part2</ulink>, <ulink
          url="http://vavai.net/2011/12/installing-zimbra-mail-server-on-sles-11-sp1-64-bit-in-less-than-30-minutes-part-3/"
          >Part3</ulink></para>
      <!--($ Id: 10.12.11 sm $)-->
    </blockquote>
  </sect2>
</sect1>
