<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://tuxtweaks.com/2010/12/converting-audio-files-with-gstreamer/"
          >TuxTweaks/Linerd: Converting Audio Files with GStreamer</ulink>
      </title>
      <para>I've written before about <emphasis role="bold">ripping audio CD's</emphasis> from the
        command line (<ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cds-part-1/">part
          1</ulink>, <ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cds-part-2/">part
          2</ulink>, <ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cd%e2%80%99s-part-3/"
          >part 3</ulink>, <ulink
          url="http://tuxtweaks.com/2010/09/command-line-basics-ripping-audio-cd’s-part-4/">part
          4</ulink>). Certainly, if you're just ripping a new CD, then just convert the audio to
        your chosen format at that time. But maybe you've been archiving your music in <emphasis
          role="bold">FLAC</emphasis> format or you purchased some high bit-rate <emphasis
          role="bold">MP3</emphasis>'s for download and now you want them in a different format or
        bit-rate for your music player. </para>
      <para><emphasis role="bold">GStreamer</emphasis> is an open source multimedia framework that's
        used by many <emphasis role="bold">GNOME</emphasis> applications and a few <emphasis
          role="bold">KDE</emphasis> apps as well. It's really meant to be used by programmers to
        create rich applications by accessing GStreamer's API. Thankfully there's also a command
        line interface available for us non-programmers. It's really meant for only testing, but
        that's OK. If it works, it works. </para>
      <para>Now you may be asking yourself why you'd want to use <emphasis role="bold"
          >GStreamer</emphasis> to convert audio when there are so many other choices available.
        Well, one really cool thing about GStreamer is that the metadata is preserved through the
        conversion process. That means you won't have to go through and <ulink
          url="http://tuxtweaks.com/2008/11/tagging-mp3-files-in-linux-with-easytag/">re-tag</ulink>
        your files after converting. (...)</para>
      <!-- ($ ld: 15.12.10 sm $) -->
    </blockquote>
    <blockquote>
      <title><ulink
          url="http://www.linux.com/learn/tutorials/390966:creating-and-reading-ebooks-on-linux-with-calibre"
          >Linux.com/Joe Brockmeier: Creating and Reading eBooks on Linux with
        Calibre</ulink></title>
      <para>Many of us are hoping for an eBook reader under the tree. A Kindle, a Nook, or perhaps
        just an Android device that runs eBook software. But if you don't get the gadget of your
        choice, or if you want to create content to fill one, you'll find plenty of eBook software
        for Linux as well as open source software to publish your own. The best of the lot? Calibre,
        a one stop solution for all your e-book needs. I didn't coin that term for Calibre — that's
        their motto. How accurate is it? Very. Calibre handles library management, format
        conversion, syncing to your device, and more. Oh, and it also lets you read your books too.
        Nice, eh?</para>
      <figure id="fig.calibre">
        <title>Viewing the Linux.com RSS Feed as eBook</title>
        <mediaobject>
          <imageobject>
            <imagedata
              fileref="http://www.linux.com/images/stories/screenshot-e-book%20viewer%20-%20linux.com.png" width="25%"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para><emphasis role="bold">Formats and DRM</emphasis> If you're new to eBooks, you might be
        wondering what I'm babbling about with regards to format conversions. Just as video and
        digital audio have a lot of formats to choose from, so do eBooks. Annoyingly, they not only
        offer many formats, but also several DRM schemes too. </para>
      <para>One of the problems with eBooks, or some eBooks, is Digital Restriction Management
        (DRM). Yes, the industry likes to call it Digital Right's Management, but that's really not
        what's going on. When you buy books from Amazon, Barnes and Noble, Apple, etc.the books are
        encrypted with DRM so that you can't open them on multiple devices or competing devices —
        even if they support the same format. For example, ePub is a widely supported format that
        can be read by a number of eBook devices like Barnes and Noble's Nook and iBooks on iOS. If
        you have an ePub book without DRM, you can read it anywhere. </para>
      <para>But ePub supports an optional DRM scheme, so publishers can add DRM to it and restrict
        it to one player or one type of DRM format. I don't find it upsetting that publishers are
        trying to find a way to limit sharing of eBooks, but the side effect is that users really
        lack options when it comes to acquiring books. If you want access to new books, you're stuck
        choosing one of the major vendors (Amazon, Apple, Barnes and Noble, etc.) and then as you
        acquire more material, you get locked into those vendors and their readers. </para>
      <para>Unfortunately, I don't have a good answer to that if you want access to the latest books
        via electronic formats. But if you want to read classics or publish your own books, you have
        lots of great options with open source. </para>
      <para>You'll find quite a few eBook formats, but the ones that matter the most for the most
        popular devices (Kindle, Nook, and iBooks on iOS) are ePub and Mobipocket. You'll also find
        a lot of support for PDF and plain text, too, but those are well-understood and handled
        formats within open source already. The ePub format is supported via Nook and iBooks,
        Mobipocket on Kindle. You can produce both ePub and Mobipocket with Calibre. (...)</para>
      <!-- ($ ld: 17.12.10 sm $) -->
    </blockquote>
    <blockquote>
      <title><ulink url="http://tuxtweaks.com/2010/12/converting-audio-to-mp3-with-gstreamer/">Tuxtweaks/Linerd: Converting Audio to MP3 with GStreamer</ulink></title>
      <para>My last post was about converting audio files in Linux with GStreamer. In that post I showed how to convert FLAC files to Ogg Vorbis files and retain the audio tags. You may however, have an audio player that does not support playing Ogg Vorbis audio files and you want to convert your files to MP3 instead.</para>
      <para>The following commands will work as long as you have the appropriate GStreamer plugins installed along with the LAME package.</para>
      <para>This command will encode to MP3 using LAME's defaults.</para>
      <screen>gst-launch filesrc location=file.flac ! flacdec ! audioconvert ! lamemp3enc ! id3v2mux ! filesink location=file.mp3</screen>
      <para>If you want to encode your files with VBR at a higher quality level, you can do something like this.</para>
      <screen>gst-launch filesrc location=file.flac ! flacdec ! audioconvert ! lamemp3enc target=quality quality=2 ! id3v2mux ! filesink location=file.mp3</screen>
      <!-- ($ ld: 18.12.10 sm $) -->
    </blockquote>
  </sect2>
  
  
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title><ulink url="http://lizards.opensuse.org/2010/12/17/adobe-flash-64-bits-under-opensuse-64bits-11-211-311-4factory/"
            >Bruno Friedmann: Adobe Flash 64 bits under openSUSE 64bits
            (11.2,11.3,11.4,factory)</ulink></title>
      <para><emphasis role="bold">Non Free </emphasis></para>
      <para>Dear readers, we sometimes have to use non-free software. This post will learn you how
        to get the latest flash player supporting natively your favorite openSUSE Linux 64 bits
        distribution. Keep in mind that it is preview software, actually pre-release code quality,
        and with it you will not receive any security updates. Keep an eyes on it, and refresh it
        manually if newer version are published So why to try that software ? My answer is simple :
        it’s a native 64bits plug-in. So it’s interaction with your native 64bits browser, should
        give you a better stability. My experience using it in the last 4 months is pretty good, no
        Firefox crash due to flash. (Several pro week or day with the 32bits 10.0 version) </para>
      <para><emphasis role="bold">Get ready</emphasis></para>
      <para><emphasis role="bold">Remove any installed 32bits packages </emphasis>First things to
        do, remove all actual 32bits flash installed. </para>
      <para><screen>zypper rm flash-player pullin-flash-player</screen><emphasis role="bold">Get the
          lastest Flash square preview </emphasis></para>
      <para>Go the main project page Square </para>
      <para>Read the informations, and the Adobe License you implicitly accept by using this
        software. </para>
      <para>Then Download the tar.gz </para>
      <para><screen>cd /tmp wget http://download.macromedia.com/pub/labs/flashplayer10/flashplayer10_2_p3_64bit_linux_111710.tar.gz</screen></para>
      <para><emphasis role="bold">Uncompress &amp; Install</emphasis></para>
      <para><screen>tar -xvzf flashplayer10_2_p3_64bit_linux_111710.tar.gz</screen></para>
      <para><screen>sudo chown root:root libflashplayer.so</screen></para>
      <para><screen>sudo cp libflashplayer.so /usr/lib64/browser-plugins/libflashplayer.so</screen></para>
      <para><emphasis role="bold">Test </emphasis></para>
      <para>Close any firefox or konqueror running, and restart them under firefox, launch the
        about:plugins uri and you should <emphasis role="bold">see Shockwave Flash File:
          libflashplayer.so Version: Shockwave Flash 10.3 d162</emphasis> Have a nice surfing
        session, if you like flash website .</para>
      <para><!-- ($ ld: 17.12.10 sm $) --></para>
    </blockquote>
  </sect2>
  <!--
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>super article</title>
      <para>bin/sh</para>
    </blockquote>
  </sect2> 
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title><ulink
          url="http://www.osnews.com/story/24111/Wake_Your_Linux_Up_From_Sleep_for_a_Cron_Job"
          >OSNews/Dedoimedo: Wake Your Linux Up From Sleep for a Cron Job </ulink></title>
      <para>Here's the latest in our new series on OS tips from power users: a seemingly trivial
        task. You have a computer, most likely a laptop, that you wish to keep suspended while
        you're not working. For example, let's say overnight. At the same time, you wish to run a
        handful of maintenance tasks, like backups and cleanup, which you don't normally do during
        the day. So you need a mechanism that will send your machine to sleep, wake it up when
        necessary, run cron jobs, then send it back to sleep again. </para>
      <para>Possible? Well, if it weren't, I would not be writing this tutorial, but it definitely
        is not trivial. In this tutorial, I will show you how you can do this, in a relatively
        simple and safe manner. We will check the requirements for the task. We will examine a
        typical use case. We will discuss the many small-print items revolving around this idea,
        e.g. why you need to be extra careful with waking from sleep for cron jobs. And we'll do a
        few other things, besides. . (...) ($ ld: 10.12.10 sm $) </para>
    </blockquote>
    </sect2> -->
</sect1>
