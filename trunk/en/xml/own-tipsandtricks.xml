<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd" [
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="tipsandtricks">
  <title>Tips and Tricks</title>
  <!--
  <sect2>
    <title>For Desktop Users</title>
    <blockquote>
      <title>
        <ulink url="http://lizards.opensuse.org/2010/12/21/easy-use-of-webyast-for-opensuse-11-3/">Stefan Schubert: Easy use of WebYaST for OpenSuSE 11.3</ulink>
      </title>
      <para><emphasis role="bold">Have you ever tried WebYaST ? No ? Then it is time for.</emphasis>
      </para>
      <para>We have noticed that WebYaST is not really known in the OpenSuSE community. One reason
        for is that WebYaST is not really user friendly regarding the installation.</para>
      <para>So we have investigate here some effort. Lets see….</para>
      <para><emphasis role="bold">Installation</emphasis></para>
      <para>The simplest way is the one-click installation which is already installed on your
        OpenSuSE 11.3.</para>
      <para>Just use a web browser (like firefox) with the url: <ulink url="http://download.opensuse.org/repositories/YaST:/Web/openSUSE_11.3/webyast.ymp">http://download.opensuse.org/repositories/YaST:/Web/openSUSE_11.3/webyast.ymp</ulink></para>
      <para>The browser will ask you to start the installation via the one-click installation. Start
        the installation and go through the installation workflow.</para>
      <para><emphasis role="bold">Starting and managing WebYaST</emphasis></para>
      <para>WebYaST is a web application which runs on two http servers on your system. For starting
        and managing these servers Thomas Goettlicher has written a nice Qt-applet which can be
        started e.g. in KDE:</para>
      <mediaobject>
        <imageobject>
          <imagedata width="25%" fileref="http://lizards.opensuse.org/wp-content/uploads/2010/12/qwebyast1.jpeg"/>
        </imageobject>
      </mediaobject>
      <para>After starting the WebYaST applet the WebYaST icon appears on the right edge of the
        frame :</para>
      <informaltable frame="none">
        <tgroup cols="2">
          <colspec colwidth="0.5in"/>
          <colspec colwidth="0.5in"/>
          <tbody>
            <row>
              <entry>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="http://lizards.opensuse.org/wp-content/uploads/2010/12/qwebyast-disabled.png"/>
                  </imageobject>
                </mediaobject>
              </entry>
              <entry>WebYaST is disabled</entry>
            </row>
            <row>
              <entry>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="http://lizards.opensuse.org/wp-content/uploads/2010/12/qwebyast-enabled.png"/>
                  </imageobject>
                </mediaobject>
              </entry>
              <entry>WebYaST is enabled</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>With the right mouse click you can manage WebYaST:</para>
      <mediaobject>
        <imageobject>
          <imagedata width="25%" fileref="http://lizards.opensuse.org/wp-content/uploads/2010/12/qwebyast21.jpeg"/>
        </imageobject>
      </mediaobject>
      <para>With this applet you can start WebYaST in your browser too. After accepting the GPG-key
        please login with your <quote>root</quote> account.</para>
      <para>And that’s WebYaST:</para>
      <mediaobject>
        <imageobject>
          <imagedata width="25%" fileref="http://lizards.opensuse.org/wp-content/uploads/2010/12/webyast.png"/>
        </imageobject>
      </mediaobject>
      <para>That’s all.</para>
      <para>(Yes, I know that sentence is written almost in every post here. Even in posts where
        problems just starting after the sentence has been read. :-) )But I think that should be
        really all. If not, please use bugzilla and blame us ! Have fun ! </para>
      <para>(Yes, I know that’s the second sentence which should be in every blog :-) )</para>
    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://maketecheasier.com/change-linux-displays-on-the-fly-with-disper/2010/12/22">Make Tech Easier/Tavis J. Hampton: How to Change Linux Displays on the Fly with Disper</ulink>
      </title>
      <para>Using Linux on a laptop has always been a hit and miss affair. With sometimes obscure
        proprietary hardware, many laptop manufacturers have showed no interest in supporting the
        free operating system. Nevertheless, through hard work by developers and support from some
        hardware manufacturers, Linux now supports a wide variety of laptops and netbooks.
        (...)</para>
    </blockquote>
  </sect2> -->
  <sect2>
    <title>For Commandline/Script Newbies</title>
    <blockquote>
      <title>
        <ulink url="http://www.pcworld.com/businesscenter/article/214370/12_commands_every_linux_newbie_should_learn.html"
          >PCWorld/Katherine Noyes: 12 Commands Every Linux Newbie Should Learn</ulink>
      </title>
      <para>PC World - It&apos;s a testament to how far <ulink url="http://www.pcworld.com/businesscenter/article/207479/linux_is_on_the_rise_for_business.html?tk=rel_news"
        >Linux</ulink> has come that users today don&apos;t typically have to use the command line if they don&apos;t want to. Such is the quality of the graphical user 
        interfaces in many modern <ulink url="http://www.pcworld.com/businesscenter/article/204767/a_guide_to_todays_top_10_linux_distributions.html?tk=rel_news"
          >Linux distributions</ulink> that there&apos;s simply no need, in general.</para>
      <para>Yet the command line can be a highly efficient way of getting things done in the Linux
        world--it&apos;s often a much simpler, easier and more direct method than clicking through all
        the menu choices, in fact.</para>
      <para>I believe fear of the command line is one of the 
        <ulink url="http://www.pcworld.com/businesscenter/article/207739/top_5_mistakes_made_by_linux_firsttimers.html?tk=rel_news"
          >top mistakes</ulink> newcomers to Linux sometimes make. For that reason, let&apos;s look at
        some of the main commands any Linux user should know. (...)</para>
      <!-- ($ ld: 27.12.10 sm $) -->    
    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://www.linux.com/learn/tutorials/393476:2010-vim-guide-roundup">Linux.com: 2010 VIm Guide Roundup</ulink>
      </title>
      <para>Making your New Year&apos;s Resolutions for 2011? How about adding, &quot;learn Vim&quot; to the list?
        We make it easy, with all the Vim tutorials we&apos;ve run on Linux.com in 2010.</para>
      <para>This year we ran a series of tutorials on Vim ranging from the basics to more advanced
        topics like extending Vim with scripts and plugins. If you missed them the first time
        around, here they are again to help you get ready for efficient text editing in 2011.</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Vim 101: A Beginner&apos;s Guide to Vim</emphasis></para>
          <para>This tutorial covers Vim&apos;s modes, the basics of moving using Vim&apos;s keybindings,
            editing, searching and replacing, and much more. Read the rest in <ulink url="http://www.linux.com/learn/tutorials/228600-vim-101-a-beginners-guide-to-vim"
              >A Beginner&apos;s Guide to Vim</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vim 201: An Intermediate Guide to Vim</emphasis></para>
          <para>Many use Vim, but don&apos;t make use of nearly all the features. In this guide, we&apos;ll
            take a look at some of the intermediate features offered by Vim, including
            abbreviations, word completion, and editing multiple documents in the same Vim session.
            Get the full scoop in <ulink url="http://www.linux.com/learn/tutorials/243002-vim-201-an-intermediate-guide-to-vim">An Intermediate Guide to Vim</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vim 301: Getting Adept at Vim</emphasis></para>
          <para>If you&apos;ve worked your way through the first two guides, you should be in for smooth
            sailing using Vim. But even with all that under your belt, you&apos;ve only scraped the
            surface of what Vim can do. This tutorial covers setting up a Vim configuration file,
            using the &quot;folding&quot; features, getting to the shell from Vim, and the dot. </para>
          <para>It&apos;s all in <ulink url="http://www.linux.com/learn/tutorials/262147-vim-301-getting-adept-at-vim">Getting Adept at Vim</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vim 401: Extending Vim and More</emphasis></para>
          <para>The next installment goes into more detail on plugins and scripts, using Vim&apos;s GUI
            (yes, it does have a GUI!), bookmarks, and where to find scripts and plugins. Check out
              <ulink url="http://www.linux.com/learn/tutorials/264315-vim-401-extending-vim-and-more">Extending Vim and More</ulink>.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Using Spell Checking in Vim</emphasis></para>
          <para>If you&apos;re new to Vim and/or using Vim in text mode, it&apos;s not obvious that Vim even
            supports spell checking. But it does, and it&apos;s easy to use once you turn it on. If
            you&apos;re tackling prose in Vim, you&apos;ll definitely want to read <ulink url="http://www.linux.com/learn/tutorials/357267-using-spell-checking-in-vim"
              >Using Spell Checking in Vim</ulink>.</para>
        </listitem>
      </itemizedlist>
      <para>Look for more guides and tutorials in 2011 on Linux utilities and tools. Have some
      suggestions? Drop us a note in the comments!</para>
      <!-- ($ ld: 29.12.10 sm $) -->    
    </blockquote>
  </sect2>
  <sect2>
    <title>For Developers and Programmers</title>
    <blockquote>
      <title>
        <ulink url="https://www.packtpub.com/article/testing-tools-techniques-python">Packt/Daniel Arbuckle: Testing Tools and Techniques in Python</ulink>
      </title>
      <para>This article by Daniel Arbuckle, author of <ulink url="http://bit.ly/OWN1561">Python Testing</ulink>, introduces code coverage and continuous integration, and teaches 
        how to tie automated testing into version control systems. In this article, we will</para>
      <itemizedlist>
        <listitem><para>Discuss code coverage, and learn about coverage.py</para></listitem>
        <listitem><para>Discuss continuous integration, and learn about buildbot</para></listitem>
        <listitem><para>Learn how to integrate automated testing into popular version control systems (...)</para></listitem>
      </itemizedlist>
      <!-- ($ ld: 31.12.10 sat $) -->    
    </blockquote>
    <blockquote>
      <title>
        <ulink url="http://balau82.wordpress.com/2010/12/28/coding-styles-comparison-in-the-open-source-software-world/"
          >Balau: Coding styles comparison in the Open Source Software world</ulink>
      </title>
      <para>While looking for existing C coding standards I discovered that the GNU and Linux projects officially suggest very different styles. Inside the Linux kernel 
        documentation, Linus Torvalds goes so far as to mock GNU coding standards:</para>
      <para><quote>First off, I’d suggest printing out a copy of the GNU coding standards, and NOT read it. Burn them, it’s a great symbolic gesture.</quote></para>
      <para>At this point I wanted to understand the difference between the coding styles of established open source projects. When I say <quote>styles</quote> I mean mainly 
      the source code appearance, and the standards that help to read and maintain the code. Here’s a list of coding styles that I read:</para>
      <itemizedlist>
        <listitem><para>Linux kernel coding style</para></listitem>
        <listitem><para>GNU Coding Standards</para></listitem>
        <listitem><para>Qt Coding Style</para></listitem>
        <listitem><para>Code Conventions for the Java TM Programming Language (PDF version)</para></listitem>
        <listitem><para>Style Guide for Python Code</para></listitem>
        <listitem><para>GNOME Programming Guidelines</para></listitem>
        <listitem><para>Kdelibs Coding Style</para></listitem>
        <listitem><para>Mono Coding Guidelines</para></listitem>
        <listitem><para>Christian Neukirchen’s Ruby Style Guide</para></listitem>
        <listitem><para>The Unofficial Ruby Usage Guide(...)</para></listitem>
      </itemizedlist>
      <!-- ($ ld: 31.12.10 sat $) -->    
    </blockquote>
  </sect2>
  <sect2>
    <title>For System Administrators</title>
    <blockquote>
      <title>
        <ulink url="http://vavai.net/2010/12/domainkeysdkim-implementation-on-zimbrasles-11-sp1-with-opendkim/"
          >Masim Sugianto: DomainKeys/DKIM Implementation on Zimbra+SLES 11 SP1 with OpenDKIM</ulink>
      </title>
      <figure id="fig.zimbra">
        <title>Zimbra</title>
        <mediaobject>
          <imageobject>
            <imagedata width="25%" fileref="http://vavai.com/wp-content/uploads/2010/12/zimbra-logo32.jpg"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Following tutorial will covers DomainKeys/DKIM implementation using OpenDKIM on SLES or
        openSUSE. Domain Keys Identified Mail (DKIM) is a technology designed to make it difficult
        or impossible for criminals to steal the identities of legitimate organizations. This
        authentication technology allows good senders to <quote>sign</quote> a message to prove that it really
        did come from them..</para>
      <para>DKIM originally written as sender authentication protocol developed in order to address
        the problem of forged email messages. Yahoo! released the DomainKeys specification and Cisco
        released the Internet Identified Mail specification. Both methods are based on cryptographic
        message signing. The two efforts have been merged, and the combined specification is known
        as DomainKeys Identified Mail (DKIM).</para>
      <para>These are various options for implementing DomainKeys Signature : by using DK-Filter,
        DKIM-milter, OpenDKIM and also by using Amavisd-new DKIM implementation. Don’t be confused
        with all the terms. All method have similar function, signing your email as <quote>trusted</quote> or
        legitimate email. (...)</para>
        <!-- ($ ld: 27.12.10 sm $) -->    
    </blockquote>
    </sect2>
</sect1>
