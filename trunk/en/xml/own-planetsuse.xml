<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC 
  "-//OASIS//DTD DocBook XML V4.5//EN" 
  "http://www.docbook.org/xml/4.5/docbookx.dtd"
[
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="planetsuse">
  <title>Planet SUSE</title>
  <blockquote>
    <title><ulink
        url="http://anditosan.blogspot.com/2011/01/new-opensuse-build-service-interface.html">Andres
        Silva: New openSUSE Build Service Interface</ulink></title>
    <para>For some time now, I have been reviewing some of the interaction that one is to use when
      working with openSUSE's Build Service system. I believe it is one of the most useful tools
      that openSUSE has created because it encourages collaboration between programmers and users.
      It provides a powerful tool to package applications. </para>
    <para>However, I have noted that the interface could be changed a little in order to reflect a
      more active form of interacting with one's package information. I created some preliminary and
      simple images that could potentially become what openSUSE Build Service could look like. </para>
    <para>My emphasis is on at-a-glance information. Currently, as users enter OBS, they are greeted
      with little information about what they are working on and only see information about other
      packages being worked on . Probably this could change, focusing on what a particular user has
      on OBS is more important to that user than other packages from across OBS, which can come in
      second. (...)</para>
    <!-- ($ ld: 3.1.11 sm $) -->
  </blockquote>
  <blockquote>
    <title><ulink url="http://oyranos-cms.blogspot.com/2011/01/speeding-up-compicc.html">Kai-Uwe
        Behrmann: Speeding up CompICC</ulink></title>
    <para>As we (well, mostly other people than me) were dealing with a rather obscure
      micro-controller when hacking our laser projector in brmlab, the only datasheet we have found
      has been in Chinese. This is quite often the case with obscure China-made parts (including
      event stuff like LEDs) and it’s annoying to deal with.</para>
    <para>As powerful as the net-color spec for CompIcc and Oyranos are, they are currently slow. It
      takes Compiz around 11 seconds to show a usable desktop. For a colour geek like me no problem.
      Especially with a wide gamut display the startup delay is less of a pain then over saturated
      colours. The weak points I could figure out is that Compiz sends several _NET_DESKTOP_GEOMETRY
      events. I tried to blacklist some events and fiddle with _NET_DESKTOP_GEOMETRY, but that gave
      errors in other places. After using the nvidia-settings panel the new monitors where not
      initialised by the CompIcc plugin. So I decided to speed up the remainder. That is Oyranos and
      some stuff inside the plugin itself. </para>
    <para>First with many profiles installed Oyranos spends more time on greping through them to
      find implicit matches. The search for implicit matches occurs after the explicit search. So
      assigning a ICC profile to a monitor device would already help. </para>
    <para>One of my monitors uses a lcms generated on the fly profile. That is much slower than the
      implicit search. So I decided to cache the on the fly profile. Its now in <emphasis
        role="italic">~/.local/share/color/icc/devices/Monitor</emphasis>. Thats especially nice as
      it has a beautiful name on disk. Manufacturer-Model-Serial_edid.icc . The _edid sequence says,
      it is automatic generated. To look up the newly created profile, it has the meta tag with the
      EDID infos embedded. For the next start its a implicit profile and thats faster. </para>
    <para>The next bottleneck is colour conversion. CompIcc uses a texture lookup with 64 cubic grid
      points. These are 262144 pixel or 1.5MB in memory per monitor. Of course the 64 grid could be
      reduced, but at the expense of precision. Thats not so nice on the desktop. As the
      transformation happens at start time 3 times per monitor, it appears as a good idea to cache
      this expensive texture. Its written to a Oyranos pixel array and cached with a Oyranos in
      memory hash table. The lookup is several times faster than the computation in lcms. </para>
    <para>Well these two changes made CompIcc start now in five seconds or maybe four. Without my
      many profiles, startup in git takes around three seconds. </para>
    <para>Further a on disk cache could help eliminate the texture computation. That would be around
      one second for my two monitors. The implicit search could be reduced by caching a list on disk
      for previously parsed ICC profiles. But that is always fragile without a proper md5 hash. And
      I am not sure if reading and hashing is actual the most expensive part during the implicit
      search. But after all a abstracted on disk cache would be great in Oyranos. Lets see when I
      come around that.</para>
    <!-- ($ ld: 3.1.11 sm $) -->
  </blockquote>
  <blockquote>
    <title><ulink url="http://www.rosenauer.org/blog/2011/01/03/opensuse-project-evergreen/"
        >Wolfgang Rosenauer: openSUSE project “Evergreen”</ulink></title>
    <para>Following up on my <ulink
        url="http://www.rosenauer.org/blog/2010/11/30/community-powered-long-term-support-for-opensuse/"
        >previous blogpost</ulink> I would like to give a small update on what happened so far about
      a longer supported (open)SUSE release. </para>
    <para>We had a longer discussion on the mailing list if an openSLES (a’la CentOS) or “openSUSE
      LTS” would be the better or easier solution. There are pros and cons for both while the
      required infrastructure differs a lot. I’m not diving into details here though. While I would
      find a SLES clone appealing I’m not in the position to drive such an effort. I also do not
      think that having both makes sense and therefore I decided to go on with the other approach
      for now trying to extend the lifetime of an existing openSUSE release. </para>
    <para>People in the community came up with the project name Evergreen and I think that matches
      what we try to build pretty well. I proposed to give the whole effort a trial with openSUSE
      11.1 which went unsupported with the new year. At the moment we still have organizational and
      technical issues and most likely won’t be able to utilize all the update features (deltarpms,
      zypp patches) but still we will try to deliver updates from a certain update repository.
      Because of the holiday season we couldn’t figure out the details yet but hopefully will get it
      sorted out in time. Stay tuned for further detailed information here and on the mailing lists. </para>
    <para>Please note that this effort is in experimental state still and didn’t attract that many
      contributors yet unfortunately. So at the moment it’s still unclear if we will be able to
      deliver as we would like to. </para>
    <para>If you are interested in this project feel free to join our (current) <ulink
        url="http://lists.rosenauer.org/mailman/listinfo/evergreen">project list</ulink>.</para>
    <!-- ($ ld: 3.1.11 sm $) -->
  </blockquote>
  <blockquote>
    <title><ulink url="http://omgsuse.com/content/hey-slacker-get-back-work-libreoffice-opensuse"
        >Hey slacker! Get back to work with LibreOffice on openSUSE</ulink></title>
    <para>In <ulink url="http://omgsuse.com/content/sleeping-job">a previous post</ulink> I
      mentioned a <quote><ulink url="http://hudson-labs.org/content/whos-driving-thing">spat with
          Oracle</ulink></quote> regarding the <ulink url="http://www.hudson-labs.org">Hudson
        project</ulink>. Since the acquisition of Sun Microsystems Oracle hasn't made many friends
      in the open source community, the most notable conflict occurring within the <ulink
        url="http://www.openoffice.org">OpenOffice.org</ulink>. The disagreements between the Open
      Office community and Oracle led to <ulink
        url="http://arstechnica.com/open-source/news/2010/09/document-foundation-forks-openofficeorg-to-liberate-it-from-oracle.ars"
        >the creation of the LibreOffice project</ulink>, the founding of <ulink
        url="http://www.documentfoundation.org/">The Document Foundation</ulink> and the
        <quote>subsequent <ulink
          url="http://arstechnica.com/open-source/news/2010/11/fork-off-mass-exodus-from-ooo-as-contributors-join-libreoffice.ars"
          >mass exodus away from OpenOffice.org to LibreOffice</ulink></quote>.</para>
    <para>At first glance you might not think that this is a big deal, but LibreOffice is a big win
      for users! With the project's inception, LibreOffice incorporated some of the <quote><ulink
          url="http://go-oo.org/">go-oo</ulink></quote> changes which add better interoperability
      and polish to the Linux office mainstay. The LibreOffice project is poised to improve the
      suite with much better speed and efficiency than ever before.</para>
    <figure id="fig.libre">
      <title>LibreOffice on 11.3</title>
      <mediaobject>
        <imageobject>
          <imagedata width="45%"
            fileref="http://cdn.omgsuse.com/omg/images/libreoffice.jpg"
            align="center"/>
        </imageobject>
      </mediaobject>
    </figure>   
    <para>Thanks to some great work by the LibreOffice hackers associated with the openSUSE <xref linkend="fig.libre"/> project,
    LibreOffice is packaged and ready for you to enjoy on openSUSE 11.3.</para>
    <mediaobject>
      <imageobject>
        <imagedata width="45%"
          fileref="http://cdn.omgsuse.com/os/sites/default/files/oneclick.png"
          align="center"/>
      </imageobject>
    </mediaobject>
    <!-- ($ ld: 5.1.11 sm $) FIXME: Target should be added.-->
  </blockquote>
</sect1>
