<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC 
  "-//OASIS//DTD DocBook XML V4.5//EN" 
  "http://www.docbook.org/xml/4.5/docbookx.dtd"
[
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 role="planetsuse">
  <title>Planet SUSE</title>
  <blockquote>
    <title>
      <ulink
        url="http://lizards.opensuse.org/2011/02/13/ati-amd-flgrx-8-812-catalyst-11-1-available-also-for-11-4factory/"
        >Bruno Friedmann: ATI Amd flgrx 8.812 catalyst 11.1 available also for 11.4/factory</ulink>
    </title>
    <para>"A quick note for the week-end, I’ve build and uploaded the new fglrx drivers. </para>
    <para>The good news, they are also available for 11.4/factory,</para>
    <para><emphasis role="bold">Unofficial-but-working repository</emphasis></para>
    <para>For openSUSE 11.4 (factory) <emphasis role="bold">NEW
      !</emphasis><screen>zypper ar -c -f -n "ATI/AMD fglrx non-official" http://linux.ioda.net/mirror/ati/openSUSE_11.4/ "ATI/AMD FGLRX"</screen></para>
    <para>I would like to have feedback about how that works for you, please comment !</para>
    <para><emphasis role="bold">Factory specifics troubles</emphasis></para>
    <para>on a fresh auto-configuration factory install :
      libomp43<screen>Problem: fglrx64_7_6_0_SUSE114-8.812-1.x86_64 requires gcc, but this requirement cannot be provided
  uninstallable providers: gcc-4.5-16.1.i586[openSUSE-11.4-11.4-1.35]
                   gcc-4.5-16.1.x86_64[openSUSE-11.4-11.4-1.35]
 Solution 1: deinstallation of libgomp43-4.3.4_20091019-5.23.x86_64
 Solution 2: do not install fglrx64_7_6_0_SUSE114-8.812-1.x86_64
 Solution 3: break fglrx64_7_6_0_SUSE114 by ignoring some of its dependencies

Choose from above solutions by number or cancel [1/2/3/c] (c): 1
Resolving dependencies...
Resolving package dependencies...

The following NEW packages are going to be installed:
  binutils-gold fglrx64_7_6_0_SUSE114 gcc gcc45 glibc-devel
  kernel-default-devel kernel-desktop-devel kernel-devel kernel-source
  kernel-syms kernel-xen-devel libgomp45 linux-glibc-devel make patch 

The following package is going to be REMOVED:
  libgomp43 

15 new packages to install, 1 to remove.
Overall download size: 127.9 MiB. After the operation, additional 600.9 MiB
will be used.</screen></para>
    <para>Normally this bug (in M5/M6) should has been resolved in RC1.</para>
    <para>See full details on my previous dedicated post <ulink
        url="http://lizards.opensuse.org/?p=4673"
      >http://lizards.opensuse.org/?p=4673</ulink>"</para>
    <!-- ($ ld: 14.2.11 sm $) -->
  </blockquote>
  <blockquote>
    <title><ulink url="http://blip.tv/file/4732649">openSUSE TV: Amazing openSUSE</ulink></title>
    <para>openSUSE has developed both great infrastructure technology and a powerful enduser
      product; where is it going now? </para>
    <para>Over 5 years ago Novell decided to turn their new asset, SuSE Linux into a community
      distribution. It was a long and laborious process but since almost 2 years now the development
      processes have been opened up to the community. We now speak of openSUSE, a community which is
      now searching for it's direction. The project has state-of-the-art infrastructure at its
      disposal and develops a modern, stable and powerful linux distribution. Meanwhile,
      communication and marketing are it's weak points - innovative technologies like the openSUSE
      Build Service and SUSE Studio do not get the exposure they deserve. In this talk an overview
      is given of openSUSE's history, the developments in the community and the latest openSUSE
      technology is presented.</para>
    <!-- ($ ld: 8.2.11 sm $) -->
  </blockquote>
  <blockquote>
    <title><ulink
        url="http://blog.jprosevear.org/2011/02/11/sleeping-on-a-couch-transferring-culture/">JP
        Rosevear: Sleeping on a Couch: Transferring Culture</ulink></title>
    <para>In the first half of 2009 the Preload department at Novell was building a team in Taiwan.
      There were two main reasons for this – our customers (the OEMs and ODMs) were located there
      and we wanted to be near them and the first question a customer in Taiwan always seemed to be
      “how many people do you have here”. Local support in the native language backed with a large
      team is very important to companies in Taiwan. </para>
    <para>We hired excellent people who were both experienced Linux engineers and people straight
      out of university. However, all were pretty inexperienced working with open source communities
      and I had a perception that any previous workplaces they were at in Asia was more likely to be
      hierarchical in nature where open communication was discouraged because you don’t question the
      boss. I believe this type of work place leads to the surfacing of issues until its way too
      late to solve them and leads to sub-optimal problem solving. I wanted to ensure that the new
      team understood open source was a key component of our work and that open communication was
      important both internally and externally in support of this. </para>
    <para>This type of situation is not one I would have thought about at all when I first became a
      manager, but a couple of prior experiences (including failure) suggested this was something I
      could and should address. In particular the OpenOffice “indoctrination” about 4 years ago when
      we were expanding the team. At that time I managed the OpenOffice team at Novell and <ulink
        url="http://people.gnome.org/~michael/">Michael Meeks</ulink> interviewed everyone we hired
      during the expansion and many of them spent 1-2 nights sleeping on his couch in the UK or
      getting trained in the Toronto office in person. Due to this, that team (now the team working
      on <ulink url="http://bit.ly/e60nXF">LibreOffice</ulink>) to this day cares a lot about
      tenacious fixing of customer problems, reducing code duplication/bloat and particularly about
      building a great community around the project. </para>
    <para>So for Taiwan <ulink url="http://www.kroah.com/log/">Greg KH</ulink>, Michael Meeks,
        <ulink url="http://bit.ly/f7rQXN">Aaron Bockover</ulink> and Stefan Dirsch all visited the
      office within a year to cover engaging with community, supportability (no one time throw away
      code here!), upstreaming commitment to debug and find the real root cause and more. This had
      two major benefits. First the culture of open source and open investigation into problems was
      transmitted by people who lived it. Second communication pathways were built so that the
      engineering team in Taiwan felt comfortable asking questions and had people they had met to
      ask the questions to, without needing “big boss” (me) to facilitate or hear potentially “dumb”
      questions. So what do we have now? Those previously inexperienced with open source engineers
      who are now <ulink url="http://bit.ly/eTVRqt">proposing</ulink>, <ulink
        url="http://bit.ly/go4W1V">submitting</ulink> and <ulink url="http://bit.ly/hL5CQ9"
        >maintaining</ulink>
      <ulink url="http://bit.ly/fcpdvq">code</ulink> upstream. </para>
    <para>(BTW Greg is really great at the kernel piece of this and was able to help <ulink
        url="http://bit.ly/iih0G8">Ralink in a similar manner</ulink> with these two items as well –
      in fact Novell is happy to help any component vendor this way). </para>
    <para>Don’t get me wrong, you can’t just hire anyone and expect to imbue them with your
      organization’s culture, you have to have to get people that are interested in and receptive to
      the culture. For instance its unlikely every single Facebook engineer was previously part of a
      culture of shared code base ownership and review that required them to be <ulink
        url="http://bit.ly/hVntIJ">in the room to fix bugs on the fly or allowed them to change and
        submit code to any part of the app or required checkin review</ulink>. These are cultural
      pieces that are transmitted post hire, but you still have to pick people who are in general
      receptive to that culture. </para>
    <para>I will always think about training engineering people in a cultural context not just in a
      technical manner now, particularly when building new teams or offices since it will be tougher
      for them to get it by osmosis. Future communication connections are built and you display the
      culture you have and want to have in the organization.</para>
    <!-- ($ ld: 12.2.11 sm $) -->
  </blockquote>
  <blockquote>
    <title>
      <ulink url="http://www.wafaa.eu/entry/smeegol-nogo-meego-gogo-1-56.html">Andrew Wafaa: Smeegol
        NoGo MeeGo GoGo</ulink>
    </title>
    <para>As many people will know I&apos;ve spent around 18 months of my spare time packaging and
      building the Netbook UX for Moblin/MeeGo on openSUSE. Not on my own, but with a community
      around me. I would just like to say a huge thank you to that community, you&apos;ve been great
      and spurred me on when I felt like the whole world was conspiring against me. </para>
    <para>Sound a bit morose? Well in a way it is. Basically by all accounts MeeGo is stopping all
      work on the Netbook UX. Yup, all our hard work is now almost for nothing :-( </para>
    <para>The first piece of evidence is the <ulink
        url="http://wiki.meego.com/Release_Engineering/Plans/1.2">Release Engineering Plans for
        1.2</ulink>. If you look at the bottom, you&apos;ll notice that the Netbook doesn&apos;t get
      any mention in Features, just bugs. Actually the same is for the 1.1 release. In all honesty,
      the biggest change between 1.1 and its predecessor is that all refernces to Moblin was
      replaced with MeeGo. The next piece of info came at the fabulous FOSDEM XI (I&apos;ll do a
      seperate post on the event later). I spoke to several people directly and indirectly involved
      with MeeGo, especially the Netbook UX, about the lack of info on the Netbook UX. Each one of
      them said the same thing - MeeGo is putting the Netbook UX into Maintanence Mode, stopping any
      further development on it, and only providing bug fixes for major issues. I asked if there was
      going to be any announcement, basically the answer was nothing official. They&apos;re just
      going to let it drift away - just like netbooks themselves have. </para>
    <para>There are most likely a huge number of reasons, which is fair enough. I was given a couple
      of reasons - 1: Netbooks arent selling anymore, the Netbook ship didn&apos;t really sail away,
      but was sunk. 2: MeeGo doesn&apos;t want to invest anymore time or effort in gtk development,
      and wants to concentrate on Qt. Now I take this last one with a tiny bit of salt, only because
      both Intel and Nokia employ (or at least did so) a sizable team of GNOME developers. Saying
      that though, if they want to keep a roof over their heads they have to do what their employer
      says, and both originally started working with touch devices. So it does make sense as much as
      it doesn&apos;t. </para>
    <para>So, I herby give immediate notice that I am now no longer going to be doing any further
      work on the MeeGo UX for openSUSE or anyone else. I wont delete the repo for 1.0 but will
      clear out the 1.1 and 1.2 repos that I had - might as well give those resources back :-) . Now
      if anyone would like to continue what I and others had started, then let me know and I would
      be more than happy. </para>
    <para>I cant say what the other distros are going to do, I&apos;ve spoken to my counter part in
      Fedora, and they&apos;re having a think about it as they were busting their chops to get
      things in for the F15 release. Either way I wish all involved luck. </para>
    <para>Now before any of you conspiracy theory junkies get worked up - this has nothing to do
      with the whole MeeGo Trademark issue that Smeegol had with the Linux Foundation. As it happens
      I was due to have a conversation with the Linux Foundation about the issues between us and
      them, but have had to re-schedule due to travel constraints from one party or the other. I
      still intend to speak with the LF about the issues, as they are still present in the other
      UX&apos;s that they are developing. </para>
    <para>So it&apos;s time for me to close off and say, so long and thanks for all the fish!
      I&apos;ll still be around, I&apos;ll probably start getting back into the GNOME swing of
      things, and help fcrozat with GNOME3 etc. Oh and I&apos;ve got a lunatic idea for a project
      which I intend to kick off (stay tuned ;-) ). </para>
    <para><ulink url="http://wiki.meego.com/MeeGo_Style_Guide#Trademark_Usage">MeeGo is a trademark
        of the Linux Foundation</ulink>.</para>
    <!-- ($ ld: 10.2.11 sm $) -->
  </blockquote>
</sect1>
