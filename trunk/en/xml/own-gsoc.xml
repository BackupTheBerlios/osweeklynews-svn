<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC 
  "-//OASIS//DTD DocBook XML V4.5//EN" 
  "http://www.docbook.org/xml/4.5/docbookx.dtd"
[
<!ENTITY % myentities SYSTEM "entities.ent">
%myentities;
]>
<!--
  
  This work is licensed under the
  Creative Commons Attribution-ShareAlike 3.0 Unported License
  by Sascha Manns. To view a copy of this license, visit
  http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
  Creative Commons
  171 Second Street
  Suite 300
  San Francisco California 94105
  USA.
  
-->
<sect1 id="gsoc" role="gsoc">
  <title>Google Summer of Code</title>
  <mediaobject>
    <imageobject>
      <imagedata fileref="http://michal.hrusecky.net/wp-content/uploads/GSoC2011_300x200.png"
        width="20%" align="center"/>
    </imageobject>
  </mediaobject>
  <blockquote>
    <title><ulink
        url="http://michal.hrusecky.net/2011/03/gsoc-2011-ideas-karma-plugin-for-opensuse-connect/"
        >Michal Hrusecky: GSoC 2011 Ideas – Karma plugin for openSUSE Connect</ulink></title>
    <para>This post is about one idea for GSoC 2011 regarding openSUSE Connect. I already <ulink
        url="http://michal.hrusecky.net/2010/08/ideas-about-karma-in-opensuse-connect/">wrote about
        it</ulink> some time ago, but now is time to elaborate a little bit more.</para>
    <para>First of all, let me state, that I already found a qualified student, that wants to work
      on this idea and that has also some good suggestions. So I’m not searching for a student with
      this post, but I want to share with you the goals of this project and why I think it is
      important.</para>
    <para>Let’s start again with what it is all about. We as a openSUSE Project have many
      contributors. People provide not only code, but they write documentation on our wiki, report
      bugs, organize release parties, organize booths at conferences and much more. Obviously we
      should make their effort recognized by public. Usual way how to do it is to assign so called
      karma points. Basically concept works like that for every contribution you receive some
      points. And then, anytime you appear somewhere, everybody can see how skilled you are. This
      works well on forums, but we have many different people and many different kinds of
      activities. And we want project wide karma somehow.</para>
    <para>So basic idea of this project is to create different kinds of karma and collect as many
      information as possible automatically. So we will have wiki karma that will grow with every
      wiki page edit. We will have marketing karma growing bigger with every tweet and blog post.
      Packager karma getting bigger with every change submitted to the openSUSE. So this project
      will be not only about displaying and managing karma points but also about collecting
      statistics from various different services.</para>
    <para>One thing that I wanted implemented was ability for group moderators to reward group
      members for extraordinary work a little bit extra. So for example if some KDE developer will
      fix really tough bug, KDE people can give him some extra points. But allocating these extra
      points will not be easy and will definitely need some more thoughts. Main trouble will be how
      to allocate points that group can redistribute.</para>
    <para>Other feature I wanted to have was having means how individuals can reward others whose
      work they appreciate. My original idea was to let people send around their own Karma points.
      But I was pointed out, that this might not be a good idea. There are few reasons why. First
      trouble is that people will get karma points of different type than they should have.
      Ambassador will send some karma points to the great developer and shy developer could earn
      many marketing points this way even though he prefers to be locked down in the basement. Other
      problem is that people that didn’t contributed yet or thanked a lot might not have anything
      left to show how did they liked the work. So other idea proposed by Kartik was using some
      general thanks you button. While thinking about it, it makes some sense to create separate
      karma type for that as well.</para>
    <para>And what to do with karma point once you have some? It should be certainly displayed in
      the river on the connect so others will know that you did something. But there should be
      possibility to also use them somehow. Obviously there need to be a banner displaying amount of
      them that you can put on your web. So your visitors can see how great contributor you are.
      Other thing that I was thinking about was to create some badges for your avatars that you can
      buy. Or even allow third party applications to use them somehow using API, so you could buy
      things, but that sounds like a distant future…</para>
    <para>So there is a lot of work to do and student who applied has even some more ideas, so I
      think if this project will get selected, openSUSE Connect will be much more fun <inlinemediaobject>
        <imageobject>
          <imagedata fileref="http://michal.hrusecky.net/wp-includes/images/smilies/icon_wink.gif"/>
        </imageobject>
      </inlinemediaobject></para>
    <para><emphasis role="bold">License</emphasis>: <ulink
        url="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC-BY-NC-SA</ulink></para>
    <!-- ($ ld: 28.3.11 sm $) -->
  </blockquote>
  <blockquote>
    <title><ulink
        url="http://oyranos-cms.blogspot.com/2011/03/google-summer-of-code-2011-student.html"
        >Kai-Uwe Behrmann: Google Summer of Code 2011 Student Applications open</ulink></title>
    <para>This years <ulink url="http://www.google-melange.com/">Google Summer of Code</ulink>
      program is open for student proposals. <ulink
        url="http://freedesktop.org/wiki/OpenIcc/GoogleSoC2011">OpenICC</ulink> in collaboration
      with openPrinting and <ulink
        url="http://en.opensuse.org/openSUSE:GSOC_2011_Ideas#ICC_Device_Profile_Repository"
        >openSUSE</ulink> provide mentored projects around colour management. Own ideas from female
      and male students all around the world are welcome.</para>
    <!--($ ld: 29.3.11 sm $)-->
  </blockquote>
  <blockquote>
    <title><ulink url="http://lizards.opensuse.org/2011/03/24/gsoc-idea-build-service-plasma-widget-suite/">Will Stephenson: GSoC Idea: Build Service Plasma Widget Suite</ulink></title>
    <para>I’m blatantly abusing GSoC for a project that I would like to see in openSUSE but that
      I’ve never had time to work on. But really it’s a worthwhile thing to have: a set of Plasma
      widgets that users and developers can add to their workspace to make it easy to see what’s
      going on in OBS in the projects that matter to them. If you want to work on a fun project with
      cutting edge technologies such as Qt, QML, Plasma then head on over to the <ulink
        url="http://en.opensuse.org/openSUSE:GSOC_2011_Ideas#Build_Service_Plasma_Widgets">GSoC 2011
        Ideas Page</ulink>.</para>
    <para><emphasis role="bold">License</emphasis>: <ulink
        url="http://www.gnu.org/licenses/old-licenses/fdl-1.2.html">GFDL 1.2</ulink></para>
    <!--($ ld: 26.3.11 sm $)-->
  </blockquote>
  <blockquote>
    <title><ulink url="http://thefreecountry.wordpress.com/2011/03/25/gsoc-2011/">Alexander Naumov: GSoC 2011</ulink></title>
    <para><ulink url="http://www.google-melange.com/site/home/site">Google Summer of Code</ulink>
      (GSoC) is a program for students across the world to hack on interesting Free Software
      projects and get paid for their work. Historically, the program has brought together over 4500
      students with over 300 Open Source projects, to create millions of lines of code!</para>
    <para>Of cource openSUSE hopes to participate in <ulink
        url="http://en.opensuse.org/openSUSE:GSOC_2011">GSoC</ulink>, while being mentored by
      experienced members of the community they are working in. We have many different <ulink
        url="http://en.opensuse.org/openSUSE:GSOC_2011_Ideas">ideas</ulink> and looking for
      stundens. This is a good opportunity not only to help openSUSE and have a lot of fun working
      on interesting project, but also get 5000 $ if your project will be finished successful <inlinemediaobject>
        <imageobject>
          <imagedata
            fileref="http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif?m=1235253118g"/>
        </imageobject>
      </inlinemediaobject><ulink
        url="http://www.google-melange.com/document/show/gsoc_program/google/gsoc2011/faqs#timeline"
        > Time for hacking</ulink> is from May 23rd to August 22nd.</para>
    <para>In my opinion one of the most interesting projects is the <ulink
        url="http://en.opensuse.org/openSUSE:GSOC_2011_Ideas#Build_Service_Plasma_Widgets">Build
        Service Plasma Widgets</ulink>. It will be very useful, I guess.</para>
    <para>To get in contact with us please join IRC channel <emphasis role="bold"
        >#opensuse-project</emphasis> on freenode, or our project’s ML at
        <email>opensuse-project@opensuse.org</email> and don’t forget – we’re going to help you to
      start.</para>
    <!--($ ld: 26.3.11 sm $)-->
  </blockquote>
  <blockquote>
    <title><ulink url="http://michal.hrusecky.net/2011/03/gsoc-2011-ideas-fillup-ng/">Michal
        Hrusecky: GSoC 2011 Ideas – fillup-ng</ulink></title>
    <para>My last but not least GSoC idea. This is about actual tool that already exists but is
      currently a little bit broken and needs rewrite with a bigger picture in mind.</para>
    <para><emphasis role="bold">What is fillup?</emphasis></para>
    <para>As this project is named fillup-ng, it is obviously supposed to be replacement for
      existing utility called fillup. Let’s talk a little bit about what fillup currently does. It
      is used to parse sysconfig files. These files has syntax similar to shell scripts with only
      variables definitions. The difference is that comments in these scripts has their meaning. And
      fillup is used to merge them automatically somehow. Basic operation are following. You’ve got
      some configuration file on your system and new version cames in from package. What now?
      Classical solution is not to touch anything and let user resolve it manually. But fillup can
      do some clever things. Sometimes you want to use values specified with old configuration file
      and add new settings that wasn’t available in previous version. Sometimes, you want to keep
      only values that are in both configuration files as old configuration options are not
      supported anymore. It may happen that you want to replace some variables. Probably not while
      installing package but when running some graphical tool… If you are interested in more
      details, take a look at it’s <ulink
        url="http://www.manpages.unixforum.co.uk/man-pages/linux/suse-linux-10.1/8/fillup-man-page.html"
        >man page</ulink>.</para>
    <para>All things mentioned previously can be done with fillup. So why rewriting it? It has one
      big design disadvantage. It operates on lines. So it can’t handle variables having values over
      multiple lines. And it has few other issues as well. Why not fix it? Well, sometimes it’s
      easier to write it from scratch than trying to fix it. And we can also add some more features!
      Everybody loves new features, don’t you think? Cool feature that this project will have to
      implement is to provide some abstraction over configuration files. Create plugin system so
      anybody can extend it with his own configuration file format. So fillup-ng will support
      multiple configuration types (at least sysconfig files and ini files), will have general API
      to add new plugins to handle other configuration files. These plugins will be runtime plugable
      (so plugin with many dependencies can be in different package). And all plugins will try to
      report if the input file is theirs. One more feature that would be great as we will have more
      configuration file is to provide list of variables that I want to filter out without
      specifying all variables I want to keep.</para>
    <para><emphasis role="bold">Students?</emphasis></para>
    <para>This project took longer to get students interested than most of the other projects I
      wrote about. But in the end I also got students wanting to work on this project. And even
      though it took some time before somebody got interested, now I’ve got two students
      interested!</para>
    <!--($ ld: 31.3.11 sm $)-->
  </blockquote>
</sect1>
